intents:
##############################################
# Heating intents
##############################################
  heating.check:
    speech: >
      {%- if is_state('switch.termostato', 'on') %}La calefacción está conectada, a una temperatura de {{ states('climate.termostato') }} grados. {% if is_state_attr('climate.termostato', 'operation_mode', 'idle') %}No está en marcha {%- else %} Está en marcha {% endif -%}{%- if is_state('switch.termostato_modo_ausente', 'on') %}  y tiene el modo ausente activado.  {%- else %} y tiene el modo ausente desactivado. {% endif -%}
      {%- else -%}
      La calefacción está desconectada
      {%- endif -%}

  heating.set:
    speech: >
      {%- if OnOff == 'on' -%}
        ¡Hecho! calefacción encendida
      {%- else -%}
        Es un placer, calefacción apagada
      {%- endif -%}
    async_action: false
    action:
      - service_template: 'switch.turn_{{ OnOff }}'
        entity_id: 'switch.termostato'

  heating.temperature.set:
    speech: 'He cambiado la temperatura a {{ temperature }} grados' 
    async_action: false
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: climate.termostato
          temperature: '{{ temperature }}'

  heating.away_mode.check:
    speech: >
      {%- if is_state('switch.termostato_modo_ausente', 'on') %}  El modo ausente está activado.{%- else %} El modo ausente está desactivado.{% endif -%}
  
  heating.away_mode.set: 
    speech: >
      {%- if OnOff == 'on' -%}
        {% set action = 'activado' %}
      {%- else -%}
        {% set action = 'desactivado' %}
      {%- endif -%}
      {% if device is undefined and function is undefined %}
        {{action}}
      {% elif device is undefined %}
       ¡Hecho! He {{ action }} el {{ function_original | replace('?','')}}
      {% else %}
        ¡Hecho! He {{ action }} el {{ function_original | replace('?','') }} en {{ device_original | replace('?','') }}'
      {%- endif -%}
    async_action: false
    action:
      - service_template: 'switch.turn_{{ OnOff }}'
        data_template:
          entity_id: 'switch.{{ function }}'

##############################################
# Climate intents
##############################################
  temperature.check:
    speech: > 
      {%- if location == 'exterior' or location == 'piscina' or location == 'caseta' -%}
        La temperatura en {{ location_original | replace('?','') }} es de {{ states("sensor.netatmo_exterior_temperature") }} grados, con una humedad del {{ states("sensor.netatmo_exterior_humidity") }} por ciento y unas rachas de viento de {{ states("sensor.netatmo_anemometro_gust_strength") }} kilómetros por hora
      {%- elif location == 'salon' or location == 'suite' -%}
        La temperatura en {{ location_original | replace('?','') }} es de {{ states("sensor.netatmo_" ~ location ~ "_temperature") }} grados, con una humedad del {{ states("sensor.netatmo_" ~ location ~ "_humidity") }} por ciento
      {%- elif location == 'recibidor' -%}
        La temperatura en {{ location_original | replace('?','') }} es de {{ states.climate.termostato.attributes.current_temperature }} grados
      {%- else -%}
        No tengo sensor de temperatura en {{ location_original | replace('?','') }}
      {% endif %}

  thermometer.check:
    speech: > 
      {%- if states("sensor." ~ location ~ "_" ~ device ~ "_" ~ attribute) is not undefined -%}
        La {{ attribute_original }} en {{ location_original | replace('?','') }} es de {{ states("sensor." ~ location ~ "_" ~ device ~ "_" ~ attribute) }}
      {%- else -%}
        No tengo sensor de {{ attribute_original }} en {{ location_original | replace('?','') }}
      {% endif %}

##############################################
# Light intents
##############################################
#  light.check:
#    speech: >

##############################################
# Various intents
##############################################
  shift.geni.check:
    speech: >
       {%- if is_state('sensor.next_shift_event', 'Saliente​') -%}
         Geni está hoy saliente de noche
       {%- else -%}
         {% set diff = as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time) - as_timestamp(now().replace(hour=0).replace(minute=0).replace(second=0).replace(microsecond=0)) %}
         {%- if diff < 86400 -%}
           Geni trabaja hoy por la {{ states('sensor.next_shift_event') }}
         {%- elif diff >= 86400 and diff < 86400*2 -%}
           Geni trabaja mañana por la {{ states('sensor.next_shift_event') }}
         {%- else -%}
           Geni trabaja el próximo {{ states('sensor.next_shift_date') }} por la {{ states('sensor.next_shift_event') }}
         {% endif %}
       {% endif %}

  presence.geni.check:
    speech: >
      {%- if is_state('device_tracker.geni_combined', 'home') -%}
        Si, parece que Geni está en casa.
      {%- else -%}
        Pues parece que Geni no está en casa.
      {%- endif -%}

  goodnight.check:
    speech: >
      {%- if is_state('sensor.cocina_sensor_puerta', 'Abierta') %}Puerta de la cocina abierta. {% endif -%}{% if is_state('sensor.entrada_barrera', 'Abierta') %}Te has dejado la barrera abierta, la voy a cerrar. {% endif -%}Hasta mañana.
    async_action: true
    action:
      # Turn off stairs lights
      - service: switch.turn_on
        data:
          entity_id: switch.fibaro_system_fgs223_double_relay_switch_7_0
      # Turn off outside lights
      - service: light.turn_off
        data:
          entity_id: group.luces_exteriores
      # Turn off hall lamp
      - service: switch.turn_off
        data:
          entity_id: switch.swiid_swiidinter_switch_3_0
      # Wait 1 minute before turning off stair lights
      - delay:
          minutes: 1
      # Turn off stairs lights
      - service: switch.turn_off
        data:
          entity_id: switch.fibaro_system_fgs223_double_relay_switch_7_0
      # Close fence if open
      - condition: state
        entity_id: sensor.entrada_barrera
        state: 'Abierta'
      - service: homeassistant.turn_on
        data:
          entity_id: switch.barrera
  