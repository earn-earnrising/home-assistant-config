- platform: bitcoin
  currency: EUR
  display_options:
    - exchangerate

- platform: efergy
  app_token: !secret efergy_app_token
  utc_offset: 2
  monitored_variables:
    - type: instant_readings

- platform: netatmo
  station: HokusWeather
  modules:
    Salón:
      - temperature
      - min_temp
      - max_temp
      - humidity
      - noise
      - pressure
      - co2
      - wifi_status
    Suite:
      - temperature
      - min_temp
      - max_temp
      - humidity
      - co2
      - battery_vp
      - rf_status
    Exterior:
      - temperature
      - min_temp
      - max_temp
      - humidity
      - battery_vp
      - rf_status
    Pluviómetro:
      - rain
      - sum_rain_1
      - sum_rain_24
      - battery_vp
      - rf_status
    Anemómetro:
      - WindAngle
      - WindStrength
      - GustAngle
      - GustStrength
      - battery_vp
      - rf_status

- platform: speedtest
  minute: 30
  hour:
    - 0
    - 6
    - 12
    - 18
  monitored_conditions:
    - ping
    - download
    - upload

- platform: mqtt
  state_topic: 'owntracks/hokusphone/hokusphone'
  name: hokusphone_batt
  unit_of_measurement: '%'
  value_template: '{{ value_json.batt }}'

- platform: template
  sensors:
    ups_status:
      value_template: >-
        {%- if is_state('sensor.nut_ups_status_data', 'OL') %}
          Normal
        {% elif is_state('sensor.nut_ups_status_data', 'OL CHRG') %}
          Cargando
        {% elif is_state('sensor.nut_ups_status_data', 'OB DISCHRG') %}
          Batería
        {% elif is_state('sensor.nut_ups_status_data', 'LB DISCHRG') %}
          Batería baja
        {% elif is_state('sensor.nut_ups_status_data', 'RB') %}
          Reemplazar batería
        {% else %}
          Desconocido
        {%- endif %}

# Know if the Wemo Maker sensor has been triggered (on: garage door opened, off: garage door closed)
- platform: template
  sensors:
    fence_status:
      friendly_name: 'Estado'
      value_template: >-
          {%- if is_state_attr("switch.barrera", "sensor_state", "on") %}
              Cerrada
          {% else %}
              Abierta
          {%- endif %}
      entity_id:
        - switch.barrera

- platform: template
  sensors:
    # Fibaro FGK10x door sensor
    kitchen_back_door:
      value_template:  >-
         {%- if is_state('sensor.fibaro_system_fgk10x_door_opening_sensor_access_control_2_9', '23') %}
              Cerrada
          {% elif is_state('sensor.fibaro_system_fgk10x_door_opening_sensor_access_control_2_9', '22') %}
              Abierta
          {% else %}
              Desconocido
          {%- endif %}
      entity_id:
        - sensor.fibaro_system_fgk10x_door_opening_sensor_access_control_2_9

    # Fibaro FGK10x door sensor
    kitchen_back_door_battery:
      value_template: '{{ states.sensor.fibaro_system_fgk10x_door_opening_sensor_general_2_0.attributes.battery_level }}'
      unit_of_measurement: '%'

    # Fibaro FGMS-001 Motion sensor
    living_room_motion_sensor_battery:
      value_template: '{{ states.sensor.fibaro_system_fgms001_motion_sensor_general_6_0.attributes.battery_level }}'
      unit_of_measurement: '%'

- platform: template
  sensors:
    hall_temperature:
      value_template: '{{ states.climate.termostato.attributes.current_temperature }}'
      unit_of_measurement: '%'

# Sensor to define roughly the season of the year (if more precission needed use another algorythm)
- platform: template
  sensors:
    season:
      friendly_name: 'Estación'
      value_template:  >-
          {%- if now().month >= 3 and now().month <= 5 %}
              Spring
          {% elif now().month >= 6 and now().month <= 8 %}
              Summer
          {% elif now().month >= 9 and now().month <= 11 %}
              Autumn
          {% else %}
              Winter
          {%- endif %}

- platform: template
  sensors:
    sunrise:
      friendly_name: 'Amanecer'
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_rising)|timestamp_custom("%H:%M:%S") }}'
      entity_id:
        - sun.sun
    sunset:
      friendly_name: 'Puesta de sol'
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_setting)|timestamp_custom("%H:%M:%S") }}'
      entity_id:
        - sun.sun

- platform: systemmonitor
  resources:
    - type: disk_free
      arg: /
    - type: memory_free
    - type: processor_use
    - type: last_boot
    - type: since_last_boot

- platform: fitbit
  monitored_resources:
    - "activities/steps"
    - "activities/distance"
    - "body/weight"
    - "sleep/efficiency"

- platform: template
  sensors:
    virtual_device:
      friendly_name: 'Persona autorizada'
      value_template: >-
          {%- if is_state("device_tracker.virtual_device", "home") %}
              En casa
          {% elif is_state("device_tracker.virtual_device", "not_home") %}
              Ausente
          {% else %}
              {{ states.device_tracker.virtual_device.state }}
          {%- endif %}
      entity_id:
        - device_tracker.virtual_device
    hokusphone_hokusphone:
      friendly_name: 'Jordi'
      value_template: >-
          {%- if is_state("device_tracker.hokusphone_hokusphone", "home") %}
              En casa
          {% elif is_state("device_tracker.hokusphone_hokusphone", "not_home") %}
              Ausente
          {% else %}
              {{ states.device_tracker.hokusphone_hokusphone.state }}
          {%- endif %}
      entity_id:
        - device_tracker.hokusphone_hokusphone
    geni:
      friendly_name: 'Geni'
      value_template: >-
          {%- if is_state("device_tracker.geni", "home") %}
              En casa
          {% elif is_state("device_tracker.geni", "not_home") %}
              Ausente
          {% else %}
              {{ states.device_tracker.geni.state }}
          {%- endif %}
      entity_id:
        - device_tracker.geni
    ana:
      friendly_name: 'Ana'
      value_template: >-
          {%- if is_state("device_tracker.ana", "home") %}
              En casa
          {% elif is_state("device_tracker.ana", "not_home") %}
              Ausente
          {% else %}
              {{ states.device_tracker.ana.state }}
          {%- endif %}
      entity_id:
        - device_tracker.ana
    hp_photosmart_5520:
      friendly_name: 'HP Photosmart 5520'
      value_template: >-
          {%- if is_state("device_tracker.hp_photosmart_5520", "home") %}
              Encendida
          {% else %}
              Apagada
          {%- endif %}
      entity_id:
        - device_tracker.hp_photosmart_5520

# Google travel time to work
- platform: google_travel_time
  name: 'a la oficina'
  api_key: !secret google_distance_api_key
  origin: device_tracker.hokusphone_hokusphone
  destination: zone.oficina
  options:
    language: es
    departure_time: now
    traffic_model: pessimistic

# Google travel time to home
- platform: google_travel_time
  name: 'a casa'
  api_key: !secret google_distance_api_key
  origin: device_tracker.hokusphone_hokusphone
  destination: zone.home
  options:
    language: es
    departure_time: now
    traffic_model: pessimistic

# Google travel time to school
- platform: google_travel_time
  name: 'al colegio'
  api_key: !secret google_distance_api_key
  origin: device_tracker.hokusphone_hokusphone
  destination: zone.colegio
  options:
    language: es
    departure_time: now
    traffic_model: pessimistic

#- platform: cups
#  printers:
#    - HP_Photosmart_5520

# Magenta ink level
- platform: mqtt
  state_topic: 'home/printer/magenta'
  name: ink_level_magenta
  unit_of_measurement: '%'

# Cyan ink level
- platform: mqtt
  state_topic: 'home/printer/cyan'
  name: ink_level_cyan
  unit_of_measurement: '%'

# Yellow ink level
- platform: mqtt
  state_topic: 'home/printer/yellow'
  name: ink_level_yellow
  unit_of_measurement: '%'

# black ink level
- platform: mqtt
  state_topic: 'home/printer/black'
  name: ink_level_black
  unit_of_measurement: '%'

# Temperature CPU
- platform: snmp
  name: qnap_cpu_temp
  host: 192.168.1.2
  baseoid: 1.3.6.1.4.1.24681.1.2.6.0

# Temperature HD1
- platform: snmp
  name: qnap_hd1_temp
  host: 192.168.1.2
  baseoid: 1.3.6.1.4.1.24681.1.2.11.1.3.1

# Free HD size
- platform: snmp
  name: qnap_free_hd_size
  host: 192.168.1.2
  baseoid: 1.3.6.1.4.1.24681.1.2.17.1.5.1

# Volume status
- platform: snmp
  name: qnap_vol_status
  host: 192.168.1.2
  baseoid: 1.3.6.1.4.1.24681.1.2.17.1.6.1

# HD1 Status
- platform: snmp
  name: qnap_hd1_status
  host: 192.168.1.2
  baseoid: 1.3.6.1.4.1.24681.1.2.11.1.7.1

# Free RAM
- platform: snmp
  name: qnap_free_ram
  host: 192.168.1.2
  baseoid: 1.3.6.1.4.1.24681.1.2.3.0

# Total RAM
#- platform: snmp
#  name: qnap_total_ram
#  host: 192.168.1.2
#  baseoid: 1.3.6.1.4.1.24681.1.2.2.0

# CPU Load
#- platform: snmp
#  name: qnap_cpu_load
#  host: 192.168.1.2
#  baseoid: 1.3.6.1.4.1.24681.1.2.1.0

# Uptime
#- platform: snmp
#  name: qnap_uptime
#  host: 192.168.1.2
#  baseoid: .1.3.6.1.2.1.25.1.1.0

# Model
#- platform: snmp
#  name: qnap_model
#  host: 192.168.1.2
#  baseoid: .1.3.6.1.4.1.24681.1.2.12.0

- platform: nut
  resources:
    - ups.status
    - battery.charge
    - battery.runtime
    - ups.beeper.status
    - ups.mfr
    - ups.model

- platform: template
  sensors:
    next_holiday_mode_start:
      friendly_name: 'Inicio vacaciones'
      value_template: '{{ as_timestamp(states.calendar.holiday_mode.attributes.start_time)|timestamp_custom("%d/%m/%Y %H:%M:%S") }}'
      entity_id:
        - calendar.holiday_mode
    next_holiday_mode_end:
      friendly_name: 'Fin vacaciones'
      value_template: '{{ as_timestamp(states.calendar.holiday_mode.attributes.end_time)|timestamp_custom("%d/%m/%Y %H:%M:%S") }}'
      entity_id:
        - calendar.holiday_mode
    next_shift_event:
      friendly_name: 'Próx. turno'
      value_template: '{{ states.calendar.turnos_geni_everything.attributes.message }}'
      entity_id:
        - calendar.turnos_geni_everything
    next_shift_date:
      friendly_name: 'Próx. turno'
      value_template: >-
          {%- if as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 0 %}
              Domingo, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 1 %}
              Lunes, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 2 %}
              Martes, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 3 %}
              Miércoles, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 4 %}
              Jueves, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 5 %}
              Viernes, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 6 %}
              Sábado, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {%- endif %}
      entity_id:
        - calendar.turnos_geni_everything

- platform: history_stats
  name: Tiempo depuradora ayer
  entity_id: switch.piscina
  state: 'on'
  end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  duration:
    hours: 24

#- platform: qnap
#  host: !secret qnap_host
#  username: !secret qnap_username
#  password: !secret qnap_password
#  ssl: true
#  port: 8443
#  monitored_conditions:
#    - status
#    - cpu_usage
#    - memory_percent_used
#    - network_tx
#    - volume_percentage_used