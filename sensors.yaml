- platform: bitcoin
  currency: EUR
  display_options:
    - exchangerate

- platform: efergy
  app_token: !secret efergy_app_token
  utc_offset: 2
  monitored_variables:
    - type: instant_readings

- platform: netatmo
  station: HokusWeather
  modules:
    Salón:
      - temperature
      - min_temp
      - max_temp
      - humidity
      - noise
      - pressure
      - co2
      - wifi_status
    Suite:
      - temperature
      - min_temp
      - max_temp
      - humidity
      - co2
      - battery_vp
      - rf_status
    Exterior:
      - temperature
      - min_temp
      - max_temp
      - humidity
      - battery_vp
      - rf_status
    Pluviómetro:
      - rain
      - sum_rain_1
      - sum_rain_24
      - battery_vp
      - rf_status
    Anemómetro:
      - windangle
      - windstrength
      - gustangle
      - guststrength
      - battery_vp
      - rf_status

- platform: speedtest
  minute: 30
  hour:
    - 0
    - 6
    - 12
    - 18
  monitored_conditions:
    - ping
    - download
    - upload

#- platform: mqtt
#  state_topic: 'owntracks/hokusphone/hokusphone'
#  name: hokusphone_batt
#  unit_of_measurement: '%'
#  value_template: '{{ value_json.batt }}'

- platform: mqtt
  state_topic: 'location/toyota'
  name: toyota_batt
  unit_of_measurement: '%'
  value_template: '{{ value_json.battery_level }}'

- platform: mqtt
  state_topic: 'location/toyota'
  name: toyota_gps_accuracy
  unit_of_measurement: 'm'
  value_template: '{{ value_json.gps_accuracy }}'

#- platform: template
#  sensors:
#    toyota_last_update:
#      value_template: '{{as_timestamp(states.device_tracker.toyota.last_changed)|timestamp_custom("%d/%m/%Y %H:%M:%S")}}'

- platform: template
  sensors:
    ups_status:
      value_template: >-
        {%- if is_state('sensor.nut_ups_status_data', 'OL') %}
          Normal
        {% elif is_state('sensor.nut_ups_status_data', 'OL CHRG') %}
          Cargando
        {% elif is_state('sensor.nut_ups_status_data', 'OB DISCHRG') %}
          Batería
        {% elif is_state('sensor.nut_ups_status_data', 'LB DISCHRG') %}
          Batería baja
        {% elif is_state('sensor.nut_ups_status_data', 'RB') %}
          Reemplazar batería
        {% else %}
          Desconocido
        {%- endif %}

# Know if the Wemo Maker sensor has been triggered (on: garage door opened, off: garage door closed)
- platform: template
  sensors:
    switch_barrera:
      friendly_name: 'Estado'
      value_template: >-
          {%- if is_state_attr("switch.barrera", "sensor_state", "off") %}
              Abierta
          {% else %}
              Cerrada
          {%- endif %}
      entity_id:
        - switch.barrera

- platform: template
  sensors:
    # Fibaro FGK10x door sensor - kitchen door
    cocina_sensor_puerta:
      value_template:  >-
         {%- if is_state('sensor.fibaro_fgk10x_door_opening_sensor_puerta_porche_access_control', '23') %}
              Cerrada
          {% elif is_state('sensor.fibaro_fgk10x_door_opening_sensor_puerta_porche_access_control', '22') %}
              Abierta
          {% else %}
              Desconocido
          {%- endif %}
      entity_id:
        - sensor.fibaro_fgk10x_door_opening_sensor_puerta_porche_access_control
      icon_template: '{% if is_state("sensor.fibaro_fgk10x_door_opening_sensor_puerta_porche_access_control", "23") %}mdi:checkbox-blank-outline{% else %}mdi:arrow-right-bold-box-outline{% endif %}'
    # Fibaro FGK10x door sensor battery level - kitchen door
    cocina_sensor_puerta_bateria:
      value_template: '{{ states.zwave.fibaro_fgk10x_door_opening_sensor_puerta_porche.attributes.battery_level }}'
      unit_of_measurement: '%'

    # Fibaro FGK10x door sensor - kitchen blind
    cocina_sensor_persiana:
      value_template:  >-
         {%- if is_state('sensor.fibaro_fgk10x_door_opening_sensor_persiana_porche_access_control', '23') %}
              Cerrada
          {% elif is_state('sensor.fibaro_fgk10x_door_opening_sensor_persiana_porche_access_control', '22') %}
              Abierta
          {% else %}
              Desconocido
          {%- endif %}
      entity_id:
        - sensor.fibaro_fgk10x_door_opening_sensor_persiana_porche_access_control
      icon_template: '{% if is_state("sensor.fibaro_fgk10x_door_opening_sensor_persiana_porche_access_control", "23") %}mdi:checkbox-blank-outline{% else %}mdi:arrow-right-bold-box-outline{% endif %}'
    # Fibaro FGK10x door sensor battery level - kitchen blind
    cocina_sensor_persiana_bateria:
      value_template: '{{ states.zwave.fibaro_fgk10x_door_opening_sensor_persiana_porche.attributes.battery_level }}'
      unit_of_measurement: '%'

    # Fibaro FGMS-001 Motion sensor
    salon_detector_movimiento_bateria:
      value_template: '{{ states.zwave.fibaro_fgms001_motion_sensor_salon.attributes.battery_level }}'
      unit_of_measurement: '%'
    salon_detector_movimiento:
      value_template:  >-
         {%- if is_state("sensor.fibaro_fgms001_motion_sensor_salon_burglar", "8") %}
              Detectado
          {% else %}
              Despejado
          {%- endif %}
      entity_id: 
        - sensor.fibaro_fgms001_motion_sensor_salon_burglar
      icon_template: '{% if is_state("sensor.fibaro_fgms001_motion_sensor_salon_burglar", "8") %}mdi:run-fast{% else %}mdi:human-male{% endif %}'
    salon_detector_movimiento_sabotaje:
      value_template: >-
         {%- if is_state("sensor.fibaro_fgms001_motion_sensor_salon_burglar", "3") %}
              Detectado
          {% else %}
              Normal
          {%- endif %}
      entity_id: 
        - sensor.fibaro_fgms001_motion_sensor_salon_burglar
      icon_template: '{% if is_state("sensor.fibaro_fgms001_motion_sensor_salon_burglar", "3") %}mdi:vibrate{% else %}mdi:crop-portrait{% endif %}'

    # Nodon Octan button battery level
    recibidor_boton_bateria:
      value_template: '{{ states.zwave.nodon_crc3100_octan_remote.attributes.battery_level }}'
      unit_of_measurement: '%'

##############################################
# Sensors for api.ai
##############################################
- platform: template
  sensors:
    recibidor_termometro_temperatura:
      value_template: '{{ states.climate.termostato.attributes.current_temperature }}'
      unit_of_measurement: 'grados'
      friendly_name: 'la temperatura del recibidor'
      entity_id: 
        - climate.termostato

    exterior_termometro_temperatura:
      value_template: '{{ states("sensor.netatmo_exterior_temperature") }}'
      unit_of_measurement: 'grados'
      friendly_name: 'la temperatura exterior'
      entity_id:
        - sensor.netatmo_exterior_temperature
    exterior_termometro_humedad:
      value_template: '{{ states("sensor.netatmo_exterior_humidity") }}'
      unit_of_measurement: 'por ciento'
      friendly_name: 'la humedad exterior'
      entity_id: 
        - sensor.netatmo_exterior_humidity
    exterior_termometro_max_temp:
      value_template: '{{ states("sensor.netatmo_exterior_max_temp") }}'
      unit_of_measurement: 'grados'
      friendly_name: 'la temperatura máxmima de hoy en el exterior'
      entity_id: 
        - sensor.netatmo_exterior_max_temp
    exterior_termometro_min_temp:
      value_template: '{{ states("sensor.netatmo_exterior_min_temp") }}'
      unit_of_measurement: 'grados'
      friendly_name: 'la temperatura mínima de hoy en el exterior'
      entity_id: 
        - sensor.netatmo_exterior_min_temp
    salon_termometro_co2:
      value_template: '{{ states("sensor.netatmo_salon_co2") }}'
      unit_of_measurement: 'partes por millón'
      friendly_name: 'el c o 2 en el salón'
      entity_id: 
        - sensor.netatmo_salon_co2
    salon_termometro_temperatura:
      value_template: '{{ states("sensor.netatmo_salon_temperature") }}'
      unit_of_measurement: 'grados'
      friendly_name: 'la temperatura en el salón'
      entity_id: 
        - sensor.netatmo_salon_temperature
    salon_termometro_humedad:
      value_template: '{{ states("sensor.netatmo_salon_humidity") }}'
      unit_of_measurement: 'por ciento'
      friendly_name: 'la humedad en el salón'
      entity_id: 
        - sensor.netatmo_salon_humidity
    salon_termometro_max_temp:
      value_template: '{{ states("sensor.netatmo_salon_max_temp") }}'
      unit_of_measurement: 'grados'
      friendly_name: 'la temperatura máxmima de hoy en el salón'
      entity_id: 
        - sensor.netatmo_salon_max_temp
    salon_termometro_min_temp:
      value_template: '{{ states("sensor.netatmo_salon_min_temp") }}'
      unit_of_measurement: 'grados'
      friendly_name: 'la temperatura mínima de hoy en el salón'
      entity_id: 
        - sensor.netatmo_salon_min_temp
    salon_termometro_ruido:
      value_template: '{{ states("sensor.netatmo_salon_noise") }}'
      unit_of_measurement: 'decibelios'
      friendly_name: 'el nivel de ruido en el salón'
      entity_id: 
        - sensor.netatmo_salon_noise
    salon_termometro_presion:
      value_template: '{{ states("sensor.netatmo_salon_pressure") }}'
      unit_of_measurement: 'milibares'
      friendly_name: 'la presión atmosférica en el salón'
      entity_id: 
        - sensor.netatmo_salon_pressure
    suite_termometro_co2:
      value_template: '{{ states("sensor.netatmo_suite_co2") }}'
      unit_of_measurement: 'partes por millón'
      friendly_name: 'el c o 2 en la suite'
      entity_id: 
        - sensor.netatmo_suite_co2
    suite_termometro_temperatura:
      value_template: '{{ states("sensor.netatmo_suite_temperature") }}'
      unit_of_measurement: 'grados'
      friendly_name: 'la temperatura en la suite'
      entity_id: 
        - sensor.netatmo_suite_temperature
    suite_termometro_humedad:
      value_template: '{{ states("sensor.netatmo_suite_humidity") }}'
      unit_of_measurement: 'por ciento'
      friendly_name: 'la humedad en la suite'
      entity_id: 
        - sensor.netatmo_suite_humidity
    suite_termometro_max_temp:
      value_template: '{{ states("sensor.netatmo_suite_max_temp") }}'
      unit_of_measurement: 'grados'
      friendly_name: 'la temperatura máxmima de hoy la suite'
      entity_id: 
        - sensor.netatmo_suite_max_temp
    suite_termometro_min_temp:
      value_template: '{{ states("sensor.netatmo_suite_min_temp") }}'
      unit_of_measurement: 'grados'
      friendly_name: 'la temperatura mínima de hoy en la suite'
      entity_id: 
        - sensor.netatmo_suite_min_temp

    exterior_pluviometro_lluvia:
      value_template: '{{ states("sensor.netatmo_pluviometro_rain") }}'
      unit_of_measurement: 'milímetros'
      entity_id: 
        - sensor.netatmo_pluviometro_rain
    exterior_pluviometro_lluvia_1:
      value_template: '{{ states("sensor.netatmo_pluviometro_sum_rain_1") }}'
      unit_of_measurement: 'milímetros'
      entity_id: 
        - sensor.netatmo_pluviometro_sum_rain_1
    exterior_pluviometro_lluvia_24:
      value_template: '{{ states("sensor.netatmo_pluviometro_sum_rain_24") }}'
      unit_of_measurement: 'milímetros'
      entity_id: 
        - sensor.netatmo_pluviometro_sum_rain_24

    exterior_anemometro_velocidad_viento:
      value_template: '{{ states("sensor.netatmo_anemometro_gust_strength") }}'
      unit_of_measurement: 'kilómetros por hora'
      friendly_name: 'las rachas de viento'
      entity_id: 
        - sensor.netatmo_anemometro_gust_strength

    # api.ai on/off entities
    on_off_switch_termostato:
      value_template: '{% if is_state("switch.termostato", "off") %}encendido{% else %}apagado{% endif %}'
      friendly_name: 'el termostato'
      entity_id: 
        - switch.termostato
    on_off_switch_termostato_modo_ausente:
      value_template: '{% if is_state("switch.termostato_modo_ausente", "off") %}activado{% else %}desactivado{% endif %}'
      friendly_name: 'el modo ausente en la calefacción'
      entity_id: 
        - switch.termostato_modo_ausente
    on_off_switch_piscina:
      value_template: '{% if is_state("switch.piscina", "off") %}encendido{% else %}apagado{% endif %}'
      friendly_name: 'el motor de la piscina'
      entity_id: 
        - switch.piscina
    on_off_group_luces_exteriores:
      value_template: '{% if is_state("group.luces_exteriores", "off") %}encendido{% else %}apagado{% endif %}'
      friendly_name: 'las luces exteriores'
      entity_id: 
        - group.luces_exteriores
    on_off_group_luces_interiores:
      value_template: '{% if is_state("group.luces_interiores", "off") %}encendido{% else %}apagado{% endif %}'
      friendly_name: 'las luces interiores'
      entity_id: 
        - group.luces_interiores
    on_off_switch_swiid_swiidinter_lampara_recibidor_switch:
      value_template: '{% if is_state("switch.swiid_swiidinter_lampara_recibidor_switch", "off") %}encendido{% else %}apagado{% endif %}'
      friendly_name: 'la lámpara del recibidor'
      entity_id: 
        - switch.swiid_swiidinter_lampara_recibidor_switch
    on_off_switch_fibaro_fgs223_double_relay_luz_escalera_y_suite_switch:
      value_template: '{% if is_state("switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch", "off") %}encendido{% else %}apagado{% endif %}'
      friendly_name: 'las luces de la escalera'
      entity_id: 
        - switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch
    on_off_switch_fibaro_fgs223_double_relay_luz_escalera_y_suite_switch_2:
      value_template: '{% if is_state("switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch_2", "off") %}encendido{% else %}apagado{% endif %}'
      friendly_name: 'la luz de la suite'
      entity_id: 
        - switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch_2
    on_off_switch_caseta_camara_deteccion_movimiento:
      value_template: '{% if is_state("switch.caseta_camara_deteccion_movimiento", "off") %}activado{% else %}desactivado{% endif %}'
      friendly_name: 'el detector de movimiento de la caseta'
      entity_id: 
        - switch.caseta_camara_deteccion_movimiento
    on_off_switch_piscina_camara_deteccion_movimiento:
      value_template: '{% if is_state("switch.piscina_camara_deteccion_movimiento", "off") %}activado{% else %}desactivado{% endif %}'
      friendly_name: 'el detector de movimiento de la piscina'
      entity_id: 
        - switch.piscina_camara_deteccion_movimiento
    on_off_switch_recibidor_camara_deteccion_movimiento:
      value_template: '{% if is_state("switch.recibidor_camara_deteccion_movimiento", "off") %}activado{% else %}desactivado{% endif %}'
      friendly_name: 'el detector de movimiento del recibidor'
      entity_id: 
        - switch.recibidor_camara_deteccion_movimiento
    on_off_input_boolean_salon_detector_movimiento:
      value_template: '{% if is_state("input_boolean.salon_detector_movimiento", "off") %}activado{% else %}desactivado{% endif %}'
      friendly_name: 'el detector de movimiento del salón'
      entity_id: 
        - input_boolean.salon_detector_movimiento
    on_off_input_boolean_cocina_sensor_puerta:
      value_template: '{% if is_state("input_boolean.cocina_sensor_puerta", "off") %}conectado{% else %}desconectado{% endif %}'
      friendly_name: 'el sensor de apertura de la puerta de la cocina'
      entity_id: 
        - input_boolean.cocina_sensor_puerta
    on_off_input_boolean_cocina_sensor_persiana:
      value_template: '{% if is_state("input_boolean.cocina_sensor_persiana", "off") %}conectado{% else %}desconectado{% endif %}'
      friendly_name: 'el sensor de apertura de la persiana de la cocina'
      entity_id: 
        - input_boolean.cocina_sensor_persiana
    on_off_switch_holiday:
      value_template: '{% if is_state("switch.holiday", "off") %}activado{% else %}desactivado{% endif %}'
      friendly_name: 'el modo vacaciones'
      entity_id: 
        - switch.holiday
    on_off_switch_ups_beeper:
      value_template: '{% if is_state("switch.ups_beeper", "off") %}conectado{% else %}desconectado{% endif %}'
      friendly_name: 'el pitido del SAI'
      entity_id: 
        - switch.ups_beeper
    on_off_group_seguridad:
      value_template: '{% if is_state("group.seguridad", "off") %}conectado{% else %}desconectado{% endif %}'
      friendly_name: 'el sistema de seguridad'
      entity_id: 
        - group.seguridad
    on_off_switch_barrera:
      value_template: '{% if is_state("sensor.switch_barrera", "Cerrada") %}abierto{% else %}cerrado{% endif %}'
      friendly_name: 'la barrera'
      entity_id: 
        - sensor.switch_barrera

    # api.ai check entities
    check_switch_termostato:
      value_template: '{% if is_state("switch.termostato", "off") %}apagado{% else %}encendido{% endif %}'
      friendly_name: 'el termostato'
      unit_of_measurement: 'on-off'
      entity_id: 
        - switch.termostato
    check_switch_termostato_modo_ausente:
      value_template: '{% if is_state("switch.termostato_modo_ausente", "off") %}desactivado{% else %}activado{% endif %}'
      friendly_name: 'el modo ausente en la calefacción'
      unit_of_measurement: 'enabled-disabled'
      entity_id: 
        - switch.termostato_modo_ausente
    check_switch_piscina:
      value_template: '{% if is_state("switch.piscina", "off") %}apagado{% else %}encendido{% endif %}'
      friendly_name: 'el motor de la piscina'
      unit_of_measurement: 'on-off'
      entity_id: 
        - switch.piscina
    check_group_luces_exteriores:
      value_template: '{% if is_state("group.luces_exteriores", "off") %}apagadas{% else %}encendidas{% endif %}'
      friendly_name: 'las luces exteriores'
      unit_of_measurement: 'on-off-fp'
      entity_id: 
        - group.luces_exteriores
    check_group_luces_interiores:
      value_template: '{% if is_state("group.luces_interiores", "off") %}apagadas{% else %}encendidas{% endif %}'
      friendly_name: 'las luces interiores'
      unit_of_measurement: 'on-off-fp'
      entity_id: 
        - group.luces_interiores
    check_switch_swiid_swiidinter_lampara_recibidor_switch:
      value_template: '{% if is_state("switch.swiid_swiidinter_lampara_recibidor_switch", "off") %}apagada{% else %}encendida{% endif %}'
      friendly_name: 'la lámpara del recibidor'
      unit_of_measurement: 'on-off-f'
      entity_id: 
        - switch.swiid_swiidinter_lampara_recibidor_switch
    check_switch_fibaro_fgs223_double_relay_luz_escalera_y_suite_switch:
      value_template: '{% if is_state("switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch", "off") %}apagadas{% else %}encendidas{% endif %}'
      friendly_name: 'las luces de la escalera'
      unit_of_measurement: 'on-off-fp'
      entity_id: 
        - switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch
    check_switch_fibaro_fgs223_double_relay_luz_escalera_y_suite_switch_2:
      value_template: '{% if is_state("switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch_2", "off") %}apagada{% else %}encendida{% endif %}'
      friendly_name: 'la luz de la suite'
      unit_of_measurement: 'on-off-f'
      entity_id: 
        - switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch
    check_switch_caseta_camara_deteccion_movimiento:
      value_template: '{% if is_state("switch.caseta_camara_deteccion_movimiento", "off") %}desactivado{% else %}activado{% endif %}'
      friendly_name: 'el detector de movimiento de la caseta'
      unit_of_measurement: 'enabled-disabled'
      entity_id: 
        - switch.caseta_camara_deteccion_movimiento
    check_switch_piscina_camara_deteccion_movimiento:
      value_template: '{% if is_state("switch.piscina_camara_deteccion_movimiento", "off") %}desactivado{% else %}activado{% endif %}'
      friendly_name: 'el detector de movimiento de la piscina'
      unit_of_measurement: 'enabled-disabled'
      entity_id: 
        - switch.piscina_camara_deteccion_movimiento
    check_switch_recibidor_camara_deteccion_movimiento:
      value_template: '{% if is_state("switch.recibidor_camara_deteccion_movimiento", "off") %}desactivado{% else %}activado{% endif %}'
      friendly_name: 'el detector de movimiento del recibidor'
      unit_of_measurement: 'enabled-disabled'
      entity_id: 
        - switch.recibidor_camara_deteccion_movimiento
    check_input_boolean_salon_detector_movimiento:
      value_template: '{% if is_state("input_boolean.salon_detector_movimiento", "off") %}desactivado{% else %}activado{% endif %}'
      friendly_name: 'el detector de movimiento del salón'
      unit_of_measurement: 'enabled-disabled'
      entity_id: 
        - input_boolean.salon_detector_movimiento
    check_input_boolean_cocina_sensor_puerta:
      value_template: '{% if is_state("input_boolean.cocina_sensor_puerta", "off") %}desactivado{% else %}activado{% endif %}'
      friendly_name: 'el sensor de apertura de la puerta de la cocina'
      unit_of_measurement: 'enabled-disabled'
      entity_id: 
        - input_boolean.cocina_sensor_puerta
    check_input_boolean_cocina_sensor_persiana:
      value_template: '{% if is_state("input_boolean.cocina_sensor_persiana", "off") %}desactivado{% else %}activado{% endif %}'
      friendly_name: 'el sensor de apertura de la persiana de la cocina'
      unit_of_measurement: 'enabled-disabled'
      entity_id: 
        - input_boolean.cocina_sensor_persiana
    check_switch_holiday:
      value_template: '{% if is_state("switch.holiday", "off") %}desactivado{% else %}activado{% endif %}'
      friendly_name: 'el modo vacaciones'
      unit_of_measurement: 'enabled-disabled'
      entity_id: 
        - switch.holiday
    check_switch_ups_beeper:
      value_template: '{% if is_state("switch.ups_beeper", "off") %}desactivado{% else %}activado{% endif %}'
      friendly_name: 'el pitido del SAI'
      unit_of_measurement: 'enabled-disabled'
      entity_id: 
        - switch.ups_beeper
    check_group_seguridad:
      value_template: '{% if is_state("group.seguridad", "off") %}desconectado{% else %}conectado{% endif %}'
      friendly_name: 'el sistema de seguridad'
      unit_of_measurement: 'connected-disconnected'
      entity_id: 
        - group.seguridad
    check_switch_barrera:
      value_template: '{% if is_state("sensor.switch_barrera", "Cerrada") %}cerrada{% else %}abierta{% endif %}'
      friendly_name: 'la barrera'
      unit_of_measurement: 'open-close'
      entity_id: 
        - sensor.switch_barrera
    check_sensor_cocina_sensor_persiana:
      value_template: '{% if is_state("sensor.cocina_sensor_persiana", "Cerrada") %}cerrada{% else %}abierta{% endif %}'
      friendly_name: 'la persiana de la cocina'
      unit_of_measurement: 'none'
      entity_id: 
        - sensor.cocina_sensor_persiana
    check_sensor_cocina_sensor_puerta:
      value_template: '{% if is_state("sensor.cocina_sensor_puerta", "Cerrada") %}cerrada{% else %}abierta{% endif %}'
      friendly_name: 'la puerta de la cocina'
      unit_of_measurement: 'none'
      entity_id: 
        - sensor.cocina_sensor_puerta

# Sensor to define the season of the year
- platform: season

# Sensor to get sunset and sunrise hours with a custom format.
- platform: template
  sensors:
    sunrise:
      friendly_name: 'Amanecer'
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_rising)|timestamp_custom("%H:%M:%S") }}'
      entity_id:
        - sun.sun
    sunset:
      friendly_name: 'Puesta de sol'
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_setting)|timestamp_custom("%H:%M:%S") }}'
      entity_id:
        - sun.sun

- platform: systemmonitor
  resources:
    - type: disk_free
      arg: /
    - type: memory_free
    - type: processor_use
    - type: last_boot
    - type: since_last_boot

- platform: template
  sensors:
    virtual_device:
      friendly_name: 'Persona autorizada'
      value_template: >-
          {%- if is_state("device_tracker.virtual_device", "home") %}
              En casa
          {% elif is_state("device_tracker.virtual_device", "not_home") %}
              Ausente
          {% else %}
              {{ states.device_tracker.virtual_device.state }}
          {%- endif %}
      entity_id:
        - device_tracker.virtual_device
    jordi_combined:
      friendly_name: 'Jordi'
      value_template: >-
          {%- if is_state("device_tracker.jordi_combined", "home") %}
              En casa
          {% elif is_state("device_tracker.jordi_combined", "not_home") %}
              Ausente
          {% else %}
              {{ states.device_tracker.jordi_combined.state }}
          {%- endif %}
      entity_id:
        - device_tracker.jordi_combined
    geni_combined:
      friendly_name: 'Geni'
      value_template: >-
          {%- if is_state("device_tracker.geni_combined", "home") %}
              En casa
          {% elif is_state("device_tracker.geni_combined", "not_home") %}
              Ausente
          {% else %}
              {{ states.device_tracker.geni_combined.state }}
          {%- endif %}
      entity_id:
        - device_tracker.geni_combined
    toyota:
      friendly_name: 'Toyota'
      value_template: >-
          {%- if is_state("device_tracker.toyota", "home") %}
              En casa
          {% elif is_state("device_tracker.toyota", "not_home") %}
              Ausente
          {% else %}
              {{ states.device_tracker.toyota.state }}
          {%- endif %}
      entity_id:
        - device_tracker.toyota
    hp_photosmart_5520:
      friendly_name: 'HP Photosmart 5520'
      value_template: >-
          {%- if is_state("device_tracker.hp_photosmart_5520", "home") %}
              Encendida
          {% else %}
              Apagada
          {%- endif %}
      entity_id:
        - device_tracker.hp_photosmart_5520

# Google travel time to work
- platform: google_travel_time
  name: 'a la oficina'
  api_key: !secret google_distance_api_key
  origin: device_tracker.toyota
  destination: zone.oficina
  options:
    language: es
    departure_time: now
    traffic_model: pessimistic

# Google travel time to school
- platform: google_travel_time
  name: 'al colegio'
  api_key: !secret google_distance_api_key
  origin: device_tracker.toyota
  destination: zone.colegio
  options:
    language: es
    departure_time: now
    traffic_model: pessimistic

#- platform: cups
#  printers:
#    - HP_Photosmart_5520

# Magenta ink level
- platform: mqtt
  state_topic: 'home/printer/magenta'
  name: ink_level_magenta
  unit_of_measurement: '%'

# Cyan ink level
- platform: mqtt
  state_topic: 'home/printer/cyan'
  name: ink_level_cyan
  unit_of_measurement: '%'

# Yellow ink level
- platform: mqtt
  state_topic: 'home/printer/yellow'
  name: ink_level_yellow
  unit_of_measurement: '%'

# black ink level
- platform: mqtt
  state_topic: 'home/printer/black'
  name: ink_level_black
  unit_of_measurement: '%'

# Temperature CPU
- platform: snmp
  name: qnap_cpu_temp
  host: 192.168.1.2
  baseoid: 1.3.6.1.4.1.24681.1.2.6.0

# Temperature HD1
- platform: snmp
  name: qnap_hd1_temp
  host: 192.168.1.2
  baseoid: 1.3.6.1.4.1.24681.1.2.11.1.3.1

# Free HD size
- platform: snmp
  name: qnap_free_hd_size
  host: 192.168.1.2
  baseoid: 1.3.6.1.4.1.24681.1.2.17.1.5.1

# Volume status
- platform: snmp
  name: qnap_vol_status
  host: 192.168.1.2
  baseoid: 1.3.6.1.4.1.24681.1.2.17.1.6.1

# HD1 Status
- platform: snmp
  name: qnap_hd1_status
  host: 192.168.1.2
  baseoid: 1.3.6.1.4.1.24681.1.2.11.1.7.1

# Free RAM
- platform: snmp
  name: qnap_free_ram
  host: 192.168.1.2
  baseoid: 1.3.6.1.4.1.24681.1.2.3.0

# Total RAM
#- platform: snmp
#  name: qnap_total_ram
#  host: 192.168.1.2
#  baseoid: 1.3.6.1.4.1.24681.1.2.2.0

# CPU Load
#- platform: snmp
#  name: qnap_cpu_load
#  host: 192.168.1.2
#  baseoid: 1.3.6.1.4.1.24681.1.2.1.0

# Uptime
#- platform: snmp
#  name: qnap_uptime
#  host: 192.168.1.2
#  baseoid: .1.3.6.1.2.1.25.1.1.0

# Model
#- platform: snmp
#  name: qnap_model
#  host: 192.168.1.2
#  baseoid: .1.3.6.1.4.1.24681.1.2.12.0

- platform: nut
  resources:
    - ups.status
    - battery.charge
    - battery.runtime
    - ups.beeper.status
    - ups.mfr
    - ups.model

- platform: template
  sensors:
    next_holiday_mode_start:
      friendly_name: 'Inicio vacaciones'
      value_template: >-
           {%- if states.calendar.holiday_mode.attributes.start_time is not none %}
               {{ as_timestamp(states.calendar.holiday_mode.attributes.start_time)|timestamp_custom("%d/%m/%Y %H:%M:%S") }}
           {% else %}
               No previstas
           {%- endif %}
      entity_id:
        - calendar.holiday_mode
    next_holiday_mode_end:
      friendly_name: 'Fin vacaciones'
      value_template: >-
           {%- if states.calendar.holiday_mode.attributes.end_time is not none %}
               {{ as_timestamp(states.calendar.holiday_mode.attributes.end_time)|timestamp_custom("%d/%m/%Y %H:%M:%S") }}
           {% else %}
               No previstas
           {%- endif %}
      entity_id:
        - calendar.holiday_mode
    next_shift_event:
      friendly_name: 'Próx. turno'
      value_template: '{{ states.calendar.turnos_geni_everything.attributes.message }}'
      entity_id:
        - calendar.turnos_geni_everything
    next_shift_date:
      friendly_name: 'Próx. turno'
      value_template: >-
          {%- if as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 0 %}
              Domingo, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 1 %}
              Lunes, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 2 %}
              Martes, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 3 %}
              Miércoles, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 4 %}
              Jueves, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 5 %}
              Viernes, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 6 %}
              Sábado, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
          {%- endif %}
      entity_id:
        - calendar.turnos_geni_everything

# Use of the swimming pool pump today
- platform: history_stats
  name: piscina_on_history
  entity_id: switch.piscina
  state: 'on'
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: cert_expiry
  host: !secret cert_expiry_host
  name: Caducidad certificado SSL