google_home_good_morning:
  alias: 'Google Home - Good morning'
  sequence:
    # Wait until tts finishes
#    - wait_template: "{{ is_state('media_player.recibidor', 'playing') }}"
#    - wait_template: "{{ not is_state('media_player.recibidor', 'playing') }}"
    - service: script.turn_on
      data:
        entity_id: script.speech_parte_meteorologico_corto
    - wait_template: "{{ is_state('media_player.recibidor', 'playing') }}"
    - wait_template: "{{ not is_state('media_player.recibidor', 'playing') }}"
    - service: script.turn_on
      data:
        entity_id: script.geni_shift

speech_parte_meteorologico:
  alias: '[Google Home] Parte meteorológico'
  sequence:
    - service: tts.google_translate_say
      entity_id: media_player.recibidor
      data_template:
        message: >
          La temperatura exterior es de {{ states("sensor.netatmo_exterior_temperature") | replace("."," con ") }} grados 
          y una humedad del {{ states("sensor.netatmo_exterior_humidity") }} {{states.sensor["netatmo_exterior_humidity"].attributes.unit_of_measurement }}.
          La temperatura máxima de hoy ha sido de {{ states("sensor.netatmo_exterior_max_temp") | replace("."," con ") }} grados.
          La temperatura mínima de hoy ha sido de {{ states("sensor.netatmo_exterior_min_temp") | replace("."," con ") }} grados.
          La presión atmosférica es de {{ states("sensor.netatmo_salon_pressure") | replace("."," con ") }} {{states.sensor["netatmo_salon_pressure"].attributes.unit_of_measurement }}.
          Las rachas de viento son de {{ states("sensor.netatmo_anemometro_gust_strength") }} {{states.sensor["netatmo_anemometro_gust_strength"].attributes.unit_of_measurement }}'
          {%- if states("sensor.netatmo_pluviometro_rain") == "0" %} No está lloviendo.{% else %} Está lloviendo unos {{ states("sensor.netatmo_pluviometro_rain") | replace("."," con ") }} {{states.sensor["netatmo_pluviometro_rain"].attributes.unit_of_measurement }}.{% endif %}
          {%- if states("sensor.netatmo_pluviometro_sum_rain_1") == "0" %} No ha llovido durante la última hora.{% else %} La precipitación de la última hora ha sido de {{ states("sensor.netatmo_pluviometro_sum_rain_1") | replace("."," con ") }} {{states.sensor["netatmo_pluviometro_sum_rain_1"].attributes.unit_of_measurement }}.{% endif %}
          {%- if states("sensor.netatmo_pluviometro_sum_rain_24") == "0" %} No ha llovido durante las últimas 24 horas.{% else %} La precipitación de las últimas 24 horas ha sido de {{ states("sensor.netatmo_pluviometro_sum_rain_24") | replace("."," con ") }} {{states.sensor["netatmo_pluviometro_sum_rain_24"].attributes.unit_of_measurement }}.{% endif %}
        cache: false

speech_parte_meteorologico_corto:
  alias: '[Google Home] Parte meteorológico corto'
  sequence:
    - service: tts.google_translate_say
      entity_id: media_player.recibidor
      data_template:
        message: >
          La temperatura exterior es de {{ states("sensor.netatmo_exterior_temperature") | replace("."," con ") }} grados.
          La temperatura máxima de hoy ha sido de {{ states("sensor.netatmo_exterior_max_temp") | replace("."," con ") }} grados.
          La temperatura mínima de hoy ha sido de {{ states("sensor.netatmo_exterior_min_temp") | replace("."," con ") }} grados.
        cache: false

chores:
  alias: '[Google Home] Quien saca la basura'
  sequence:
    - service: tts.google_translate_say
      entity_id: media_player.recibidor
      data_template:
        message: >
          {% if now().strftime('%a') != "Sat" %}
            {{['La suerte está echada.',
               'Déjame pensar.',
               'Creo que',
               'He decidido que',
               'Yo diría que',
               'Si la memoria no me falla.',
               'Si no voy mal,',
               'Espera que lo consulto.',
               'Según mis cálculos',
               'Lula me ha dicho que',
               'Si no voy mal',
               'Espera que piense.']|random}} hoy le toca a {% if now().strftime('%j')|int % 2 != 0 %}Carlos{% else %}Jorge{% endif %} sacar {{ {"Sun": "la basura orgánica", "Mon": "los envases y el papel", "Tue": "la basura orgánica", "Wed": "los restos y vídrio", "Thu": "la basura orgánica", "Fri": "los envases", "Sat": "no hay que sacar basura"}[now().strftime('%a')] }}.
          {% else %}
            Hoy estáis de suerte, no hay que sacar la basura
          {% endif %}

geni_shift:
  alias: '[Google Home] Turno Geni'
  sequence:
    - service: tts.google_translate_say
      entity_id: media_player.recibidor
      data_template:
        message: >
         {%- if is_state("sensor.next_shift_event", "Saliente") -%}
           Jeni está hoy saliente de noche
         {%- else -%}
           {% set diff = as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time) - as_timestamp(now().replace(hour=0).replace(minute=0).replace(second=0).replace(microsecond=0)) %}
           {%- if diff < 86400 -%}
             Jeni trabaja hoy por la {{ states("sensor.next_shift_event") }}
           {%- elif diff >= 86400 and diff < 86400*2 -%}
             Jeni trabaja mañana por la {{ states("sensor.next_shift_event") }}
           {%- else -%}
             Jeni trabaja el próximo {{ states("sensor.next_shift_date") }} por la {{ states("sensor.next_shift_event") }}
           {% endif %}
         {% endif %}

goto_sleep:
  alias: '[Google Home] Me voy dormir'
  sequence:
    - event: sleep_mode
      event_data:
        state: 'on'

presence_leave_home:
  alias: '[Google Home] Me voy de casa'
  sequence:
    - delay:
        seconds: 5
    - service: tts.google_translate_say
      entity_id: media_player.recibidor
      data_template:
        message: >
          {% set incidence = false %}
          {%- if is_state("binary_sensor.porche_sensor_puerta", "on") %}{% set incidence = true %}Puerta de la cocina abierta. {% endif %}
          {%- if is_state("binary_sensor.porche_sensor_persiana", "on") %}{% set incidence = true %}Persiana de la cocina abierta. {% endif %}
          {%- if is_state("binary_sensor.coladuria_sensor_puerta", "on") %}{% set incidence = true %}Puerta de la coladuria abierta. {% endif %}
          {%- if is_state("switch.entrance_hall_lamp_switch", "on") %}{% set incidence = true %}Lámpara del recibidor encendida. {% endif %}
          {%- if is_state("switch.escalera_switch", "on") %}{% set incidence = true %}Luz de la escalera encendida. {% endif %}
          {%- if is_state("switch.comedor_switch", "on") %}{% set incidence = true %}Luz del comedor encendida. {% endif %}
          {%- if is_state("switch.salon_switch", "on") %}{% set incidence = true %}Luz del salón encendida. {% endif %}
          {%- if is_state("switch.suite_switch", "on") %}{% set incidence = true %}Luz de la suite encendida. {% endif %}
          {%- if is_state("sensor.outside_fence", "Abierta") %}{% set incidence = true %}Barrera abierta.{% endif -%}
          {%- if not incidence %}Todo correcto.{% endif %}
