# Notify camera motion detection including attached video or image when alarm triggered
- alias: '[Alarm - Notification] Notify camera motion detection'
  trigger:
    - platform: mqtt
      topic: home/sensor/camera/recibidor/motion/attributes
    - platform: mqtt
      topic: home/sensor/camera/piscina/motion/attributes
    - platform: mqtt
      topic: home/sensor/camera/barbacoa/motion/attributes
    - platform: mqtt
      topic: home/sensor/camera/salon/motion/attributes
    - platform: mqtt
      topic: home/sensor/camera/caseta/motion/attributes
    - platform: mqtt
      topic: home/sensor/camera/entrada/motion/attributes
    - platform: mqtt
      topic: home/sensor/camera/desconocido/motion/attributes
  condition:
    condition: or
    conditions:
    - condition: state
      entity_id: switch.recibidor_camara_det_mov
      state: 'on'
    - condition: state
      entity_id: switch.salon_camara_det_mov
      state: 'on'
    - condition: state
      entity_id: switch.barbacoa_camara_det_mov
      state: 'on'
    - condition: state
      entity_id: switch.piscina_camara_det_mov
      state: 'on'
    - condition: state
      entity_id: switch.caseta_camara_det_mov
      state: 'on'
    - condition: state
      entity_id: input_boolean.entrada_camara_det_mov
      state: 'on'
  action:
    # Delay before evaluating alarm state. This is needed to allow the alarm_control panel to be triggered and avoid skipping notifications
    - delay:
        seconds: 1
    # Only continue execution if alarm has been triggered
    - condition: state
      entity_id: alarm_control_panel.home
      state: 'triggered'
    # Delay to allow the file to be totally written in the FTP before sending it
    - delay:
        seconds: 15
    # Notify the image/video taken
    - service: script.alarm_notify_camera
      data_template:
        data:
          file: '{{ trigger.payload_json.file_path }}'
          camera_name: '{{trigger.payload_json.camera_name}}'
          turn_off_entity_id: '{{trigger.payload_json.detection_entity_id}}'

# Notify presence detection in any activated sensor when sensor active and alarm triggered
- alias: '[Alarm - Notification] Notify presence detection'
  trigger: 
    - platform: state
      entity_id: binary_sensor.porche_sensor_puerta
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.porche_sensor_persiana
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.coladuria_sensor_puerta
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.despacho_sensor_movimiento
      to: 'on'
  condition:
    - condition: template
      value_template: >- 
        {%- set inputBooleanMap ={"binary_sensor.porche_sensor_puerta": "input_boolean.porche_sensor_puerta",
                         "binary_sensor.porche_sensor_persiana": "input_boolean.porche_sensor_persiana",
                         "binary_sensor.coladuria_sensor_puerta": "input_boolean.coladuria_sensor_puerta",
                         "binary_sensor.despacho_sensor_movimiento": "input_boolean.despacho_sensor_movimiento"}
         -%}
         {{is_state(inputBooleanMap[trigger.entity_id],'on')}}
  action:
    # Delay before evaluating alarm state. This is needed to avoid skipping notifications
    - delay:
        seconds: 1
    # Only continue execution if alarm has been triggered
    - condition: state
      entity_id: alarm_control_panel.home
      state: 'triggered'
    - service: script.alarm_notify_sensor
      data_template:
        data:
          message: >-
            {%- set messageMap ={"binary_sensor.porche_sensor_puerta": "Puerta de la cocina abierta",
                             "binary_sensor.porche_sensor_persiana": "Persiana de la cocina abierta",
                             "binary_sensor.coladuria_sensor_puerta": "Puerta de la coladurÃ­a abierta",
                             "binary_sensor.despacho_sensor_movimiento": "Movimiento detectado en el despacho"}
             -%}
            {{messageMap[trigger.entity_id]}}
          turn_off_entity_id: >-
            {%- set turnOffEntityId ={"binary_sensor.porche_sensor_puerta": "input_boolean.porche_sensor_puerta",
                             "binary_sensor.porche_sensor_persiana": "input_boolean.porche_sensor_persiana",
                             "binary_sensor.coladuria_sensor_puerta": "input_boolean.coladuria_sensor_puerta",
                             "binary_sensor.despacho_sensor_movimiento": "input_boolean.despacho_sensor_movimiento"}
             -%}
            {{turnOffEntityId[trigger.entity_id]}}

- alias: '[Alarm - Notification] Notify when alarm is armed away'
  trigger: 
    - platform: state
      entity_id: alarm_control_panel.home
      from: 'disarmed'
      to: 'armed_away'
  action:
    - service: script.alarm_notify_state_change_slack
      data_template:
        message: 'Alarma armada en modo fuera de casa'

              
- alias: '[Alarm - Notification] Notify when alarm is armed night'
  trigger: 
    - platform: state
      entity_id: alarm_control_panel.home
      from: 'disarmed'
      to: 'armed_night'
  action:
    - service: script.alarm_notify_state_change_slack
      data_template:
        message: 'Alarma armada en modo noche :sleeping:'

- alias: '[Alarm - Notification] Notify when alarm is disarmed'
  trigger: 
    - platform: state
      entity_id: alarm_control_panel.home
      to: 'disarmed'
  action:
    - service: script.alarm_notify_state_change_slack
      data_template:
        message: 'Alarma desarmada'
