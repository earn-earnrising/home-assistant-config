- alias: '[Alarm - Notification] Notify camera motion detection including attached photo when alarm triggered'
  trigger:
    platform: event
    event_type: folder_watcher
    event_data:
      event_type: created
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ "jpg" in trigger.event.data.file }}'
    - condition: or
      conditions:
      - condition: state
        entity_id: switch.recibidor_camara_det_mov
        state: 'on'
      - condition: state
        entity_id: switch.salon_camara_det_mov
        state: 'on'
      - condition: state
        entity_id: switch.barbacoa_camara_det_mov
        state: 'on'
      - condition: state
        entity_id: switch.piscina_camara_det_mov
        state: 'on'
      - condition: state
        entity_id: switch.caseta_camara_det_mov
        state: 'on'
  action:
    # Delay before evaluating alarm state. This is needed to avoid skipping notifications
    - delay:
        seconds: 1
    # Only continue execution if alarm has been triggered
    - condition: state
      entity_id: alarm_control_panel.home
      state: 'triggered'
    # Delay to allow the file to be totally written in the FTP before sending it
    - delay:
        seconds: 1
    # Notify the pictures taken
    - service: script.alarm_notify_camera
      data_template:
        data:
          file: '{{ trigger.event.data.path }}'
          camera_name: >-
            {%- if "C1_00626E615161" in trigger.event.data.folder -%}recibidor
            {%- elif "FI9853EP_00626E563E69" in trigger.event.data.folder -%}piscina
            {%- elif "FI9900P_00626E6D21B2" in trigger.event.data.folder -%}barbacoa
            {%- elif "WVC54CGA" in trigger.event.data.folder -%}Caseta
            {%- elif "puerta_principal" in trigger.event.data.folder -%}entrada
            {%- elif "C1_00626E8305E1" in trigger.event.data.folder -%}salon
            {%- else -%}desconocido{%-endif-%}
          turn_off_entity_id: >-
            {%- if "C1_00626E615161" in trigger.event.data.folder -%}switch.recibidor_camara_det_mov
            {%- elif "FI9853EP_00626E563E69" in trigger.event.data.folder -%}switch.piscina_camara_det_mov
            {%- elif "FI9900P_00626E6D21B2" in trigger.event.data.folder -%}switch.barbacoa_camara_det_mov
            {%- elif "WVC54CGA" in trigger.event.data.folder -%}switch.caseta_camara_det_mov
            {%- elif "puerta_principal" in trigger.event.data.folder -%}input_boolean.entrada_camara_det_mov
            {%- elif "C1_00626E8305E1" in trigger.event.data.folder -%}switch.salon_camara_det_mov
            {%- else -%}desconocido{%-endif-%}
            
- alias: '[Alarm - Notification] Notify camera motion detection including attached video when alarm triggered'
  trigger:
    platform: event
    event_type: folder_watcher
    event_data:
      event_type: created
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ "mp4" in trigger.event.data.file }}'
    - condition: or
      conditions:
      - condition: state
        entity_id: switch.recibidor_camara_det_mov
        state: 'on'
      - condition: state
        entity_id: switch.salon_camara_det_mov
        state: 'on'
      - condition: state
        entity_id: switch.barbacoa_camara_det_mov
        state: 'on'
      - condition: state
        entity_id: switch.piscina_camara_det_mov
        state: 'on'
      - condition: state
        entity_id: switch.caseta_camara_det_mov
        state: 'on'
      - condition: state
        entity_id: input_boolean.entrada_camara_det_mov
        state: 'on'
  action:
    # Delay before evaluating alarm state. This is needed to avoid skipping notifications
    - delay:
        seconds: 1
    # Only continue execution if alarm has been triggered
    - condition: state
      entity_id: alarm_control_panel.home
      state: 'triggered'
    # Delay to allow the file to be totally written in the FTP before sending it
    - delay:
        seconds: 90
    # Notify the video taken
    - service: script.alarm_notify_camera
      data_template:
        data:
          file: '{{ trigger.event.data.path }}'
          camera_name: >-
            {%- if "C1_00626E615161" in trigger.event.data.folder -%}recibidor
            {%- elif "FI9853EP_00626E563E69" in trigger.event.data.folder -%}piscina
            {%- elif "FI9900P_00626E6D21B2" in trigger.event.data.folder -%}barbacoa
            {%- elif "WVC54CGA" in trigger.event.data.folder -%}caseta
            {%- elif "puerta_principal" in trigger.event.data.folder -%}entrada
            {%- elif "C1_00626E8305E1" in trigger.event.data.folder -%}salon
            {%- else -%}desconocido{%-endif-%}
          turn_off_entity_id: >-
            {%- if "C1_00626E615161" in trigger.event.data.folder -%}switch.recibidor_camara_det_mov
            {%- elif "FI9853EP_00626E563E69" in trigger.event.data.folder -%}switch.piscina_camara_det_mov
            {%- elif "FI9900P_00626E6D21B2" in trigger.event.data.folder -%}switch.barbacoa_camara_det_mov
            {%- elif "WVC54CGA" in trigger.event.data.folder -%}switch.caseta_camara_det_mov
            {%- elif "puerta_principal" in trigger.event.data.folder -%}input_boolean.entrada_camara_det_mov
            {%- elif "C1_00626E8305E1" in trigger.event.data.folder -%}switch.salon_camara_det_mov
            {%- else -%}desconocido{%-endif-%}
            
- alias: '[Alarm - Notification] Notify when alarm is armed away'
  trigger: 
    - platform: state
      entity_id: alarm_control_panel.home
      from: 'disarmed'
      to: 'armed_away'
  action:
    - service: notify.slack
      data_template:
        message: ''
        data:
          attachments:
            - color: 'good'
              pretext: ':bell: *Alarma* :bell:'
              text: 'Alarma armada en modo fuera de casa'
              fallback: 'Alarma'
              
- alias: '[Alarm - Notification] Notify when alarm is armed night'
  trigger: 
    - platform: state
      entity_id: alarm_control_panel.home
      from: 'disarmed'
      to: 'armed_night'
  action:
    - service: notify.slack
      data_template:
        message: ''
        data:
          attachments:
            - color: 'good'
              pretext: ':bell: *Alarma* :bell:'
              text: 'Alarma armada en modo noche :sleeping:'
              fallback: 'Alarma'

- alias: '[Alarm - Notification] Notify presence detection in any activated sensor when sensor active and alarm triggered'
  trigger: 
    - platform: state
      entity_id: binary_sensor.porche_sensor_puerta
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.porche_sensor_persiana
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.coladuria_sensor_puerta
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.despacho_sensor_movimiento
      to: 'on'
  condition:
    - condition: template
      value_template: >- 
        {%- set inputBooleanMap ={"binary_sensor.porche_sensor_puerta": "input_boolean.porche_sensor_puerta",
                         "binary_sensor.porche_sensor_persiana": "input_boolean.porche_sensor_persiana",
                         "binary_sensor.coladuria_sensor_puerta": "input_boolean.coladuria_sensor_puerta",
                         "binary_sensor.despacho_sensor_movimiento": "input_boolean.despacho_sensor_movimiento"}
         -%}
         {{is_state(inputBooleanMap[trigger.entity_id],'on')}}
  action:
    # Delay before evaluating alarm state. This is needed to avoid skipping notifications
    - delay:
        seconds: 1
    # Only continue execution if alarm has been triggered
    - condition: state
      entity_id: alarm_control_panel.home
      state: 'triggered'
    - service: script.alarm_notify_sensor
      data_template:
        data:
          message: >-
            {%- set messageMap ={"binary_sensor.porche_sensor_puerta": "Puerta de la cocina abierta",
                             "binary_sensor.porche_sensor_persiana": "Persiana de la cocina abierta",
                             "binary_sensor.coladuria_sensor_puerta": "Puerta de la coladurÃ­a abierta",
                             "binary_sensor.despacho_sensor_movimiento": "Movimiento detectado en el despacho"}
             -%}
            {{messageMap[trigger.entity_id]}}
          turn_off_entity_id: >-
            {%- set turnOffEntityId ={"binary_sensor.porche_sensor_puerta": "input_boolean.porche_sensor_puerta",
                             "binary_sensor.porche_sensor_persiana": "input_boolean.porche_sensor_persiana",
                             "binary_sensor.coladuria_sensor_puerta": "input_boolean.coladuria_sensor_puerta",
                             "binary_sensor.despacho_sensor_movimiento": "input_boolean.despacho_sensor_movimiento"}
             -%}
            {{turnOffEntityId[trigger.entity_id]}}
  
- alias: '[Alarm - Notification] Notify office motion sensor tampering'
  trigger: 
    platform: state
    entity_id: binary_sensor.despacho_sensor_movimiento_sabotaje
    to: 'on'
  action:
    service: notify.telegram
    data:
      message: 'El sensor de movimento del despacho se ha manipulado'

- alias: '[Alarm - Notification] Notify when alarm is disarmed'
  trigger: 
    - platform: state
      entity_id: alarm_control_panel.home
      to: 'disarmed'
  action:
    - service: notify.slack
      data_template:
        message: ''
        data:
          attachments:
            - color: 'good'
              pretext: ':bell: *Alarma* :bell:'
              text: 'Alarma desarmada'
              fallback: 'Alarma'
