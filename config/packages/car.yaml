homeassistant:
  customize:
    sensor.ioniq_location:
      friendly_name: 'Última actualización'
      icon: 'mdi:clock'
    binary_sensor.ioniq_state:
      friendly_name: 'Estado'

recorder:
  exclude:
    entities:
      - sensor.ioniq_previous_latitude
      - sensor.ioniq_previous_longitude
      - sensor.ioniq_location_last_update

      - sensor.nissan_last_update

group:
  Ioniq:
    entities:
      - binary_sensor.ioniq_state
      - sensor.ioniq_state_soc_display
      - sensor.ioniq_state_soc_bms
      - sensor.ioniq_state_odometer
      - sensor.ioniq_state_energy_consumption
      - sensor.ioniq_state_battery_health
      - sensor.ioniq_location_gps_accuracy
      - sensor.ioniq_location
      - sensor.ioniq_location_distance_travelled_between_updates
      - binary_sensor.car_charging
      - switch.wemoinsight
      - sensor.insight_powerused
      - sensor.monthly_energy_insight_pico
      - sensor.monthly_energy_insight_valle
      - sensor.car_monthly_energy_cost
      - sensor.yearly_energy_insight_pico
      - sensor.yearly_energy_insight_valle
      - sensor.car_yearly_energy_cost
      - camera.ioniq

device_tracker:
  - platform: mqtt_json
    devices:
      # Ioniq tracker
      ioniq: car/ioniq/location
      # Nissan tracker
      #nissan: car/nissan/location

binary_sensor:
  - platform: mqtt
    state_topic: 'car/ioniq/state'
    name: ioniq_state
    value_template: 'ON'
    json_attributes_topic: 'car/ioniq/state'
    device_class: 'moving'
    force_update: true
    off_delay: 120

sensor:
  - platform: mqtt
    state_topic: 'car/ioniq/location'
    name: ioniq_location
    value_template: '{{ value_json.last_update|timestamp_custom("%d/%m/%Y %H:%M:%S") }}'
    json_attributes_topic: 'car/ioniq/location'

  - platform: template
    sensors:
      # Ioniq State Of Charge display
      ioniq_state_soc_display:
        friendly_name: 'Batería mostrada'
        device_class: 'battery'
        value_template: '{{state_attr("binary_sensor.ioniq_state", "soc_display")}}'
        unit_of_measurement: '%'
      # Ioniq State Of Health
      ioniq_state_battery_health:
        friendly_name: 'Salud batería'
        device_class: 'battery'
        value_template: '{{state_attr("binary_sensor.ioniq_state", "soh")}}'
        unit_of_measurement: '%'
      # Ioniq State Of Charge display
      ioniq_state_soc_bms:
        friendly_name: 'Batería BMS'
        device_class: 'battery'
        value_template: '{{state_attr("binary_sensor.ioniq_state", "soc_bms")}}'
        unit_of_measurement: '%'
      # Ioniq odometer
      ioniq_state_odometer:
        friendly_name: 'Odómetro'
        icon_template: 'mdi:counter'
        value_template: '{{state_attr("binary_sensor.ioniq_state", "distance")}}'
        unit_of_measurement: 'Km'
      # Ioniq Cumulative Energy Discharged
      ioniq_state_ced:
        value_template: '{{state_attr("binary_sensor.ioniq_state", "ced")}}'
        unit_of_measurement: 'kWh'
      # Ioniq Cumulative Energy Charged
      ioniq_state_cec:
        value_template: '{{state_attr("binary_sensor.ioniq_state", "cec")}}'
        unit_of_measurement: 'kWh'
      # Ioniq Average energy consumption without taking into account regeneration
      ioniq_state_energy_consumption:
        friendly_name: 'Consumo medio'
        icon_template: 'mdi:car-electric'
        value_template: '{{ ((states.sensor.ioniq_state_ced.state | float / states.sensor.ioniq_state_odometer.state | float) * 100) | round(1)}}'
        unit_of_measurement: 'kWh/100Km'
        entity_id:
          - sensor.ioniq_state_ced
          - sensor.ioniq_state_odometer
      # Ioniq Previous latitude
      ioniq_location_previous_latitude:
        value_template: '{{state_attr("sensor.ioniq_location", "platitude")}}'
        entity_id: 
          - sensor.ioniq_location
      # Ioniq Previous longitude
      ioniq_location_previous_longitude:
        value_template: '{{state_attr("sensor.ioniq_location", "plongitude")}}'
        entity_id: 
          - sensor.ioniq_location
      # Ioniq Distance travelled between updates
      ioniq_location_distance_travelled_between_updates:
        unit_of_measurement: 'm'
        friendly_name: 'Dist. entre actualizaciones'
        value_template: '{% if states.device_tracker.ioniq.attributes.latitude %} {{ (distance(states("sensor.ioniq_location_previous_latitude"), states("sensor.ioniq_location_previous_longitude"), states.device_tracker.ioniq.attributes.latitude, states.device_tracker.ioniq.attributes.longitude) * 1000) | round (2) }} {% else %} -1 {% endif %}'
        icon_template: 'mdi:tape-measure'
        entity_id: 
          - device_tracker.ioniq
          - sensor.ioniq_location_previous_latitude
          - sensor.ioniq_location_previous_longitude
      # Ioniq GPS accuracy
      ioniq_location_gps_accuracy:
        unit_of_measurement: 'm'
        friendly_name: 'Precisión GPS'
        value_template: '{{state_attr("device_tracker.ioniq", "gps_accuracy")}}'
        icon_template: 'mdi:map-marker-radius'
        entity_id: 
          - device_tracker.ioniq

  # Google travel time to work
  - platform: google_travel_time
    name: 'a la oficina'
    api_key: !secret google_api_key
    origin: device_tracker.ioniq
    destination: zone.oficina
    options:
      language: es
      departure_time: now
      traffic_model: pessimistic
  
  # Google travel time to school
  - platform: google_travel_time
    name: 'al colegio'
    api_key: !secret google_api_key
    origin: device_tracker.ioniq
    destination: zone.colegio
    options:
      language: es
      departure_time: now
      traffic_model: pessimistic

camera:
  - platform: generic
    name: Ioniq
    still_image_url: !secret camera_ioniq_still_image_url
    limit_refetch_to_url_change: true
  
#  - platform: generic
#    name: Nissan
#    still_image_url: https://maps.googleapis.com/maps/api/staticmap?center={{ states.device_tracker.nissan.attributes.latitude }},{{ states.device_tracker.nissan.attributes.longitude }}&zoom=15&size=500x500&maptype=roadmap&markers=color:grey%7Clabel:N%7C{{ states.device_tracker.nissan.attributes.latitude }},{{ states.device_tracker.nissan.attributes.longitude }}
#    limit_refetch_to_url_change: true

#automation:
  # Notify Ioniq movement if I'm not in the car
#  - alias: 'Notify ioniq movement if I am not in the car'
#    trigger:
#      platform: numeric_state
#      entity_id: sensor.ioniq_location_distance_travelled_between_updates
#      above: 50
#      for:
#        seconds: 30
#    condition:
#      condition: template
#      value_template: '{{ states.device_tracker.ioniq.state != "En ruta" }}'
#    action:
#      - service: notify.telegram
#        data_template:
#          message: 'Movimiento del ioniq de unos {{ sensor.ioniq_location_distance_travelled_between_updates.state }} metros detectado'
#      - service: telegram_bot.send_location
#        data_template:
#          latitude: '{{ states.device_tracker.ioniq.attributes.latitude }}'
#          longitude: '{{ states.device_tracker.ioniq.attributes.longitude }}'
#          target: !secret hokusphone_telegram_chat_id

#  # See Ioniq in coordinates setting location name as "En ruta" when it's publishing location data to mqtt
#  - alias: 'Ioniq En ruta'
#    trigger:
#      platform: mqtt
#      topic: car/ioniq/location
#    condition:
#      condition: template
#      value_template: '{{ states.device_tracker.ioniq.state != "home" }}'
#    action:
#      - service: device_tracker.see
#        data_template:
#          dev_id: 'ioniq'
#          location_name: 'En ruta'
#          gps: ['{{ states.device_tracker.ioniq.attributes.latitude }}','{{ states.device_tracker.ioniq.attributes.longitude }}']
#
#  # See Ioniq in coordinates (with no location_name) when no data published to mqtt for more than 1 minute
#  - alias: 'Ioniq not-home'
#    trigger:
#        platform: template
#        value_template: '{{(as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M"))-as_timestamp(strptime(states.sensor.ioniq_location_last_update.state,"%d/%m/%Y %H:%M:%S")))/60 > 1}}'
#    condition:
#      condition: state
#      entity_id: device_tracker.ioniq
#      state: 'En ruta'
#    action:
#      - service: device_tracker.see
#        data_template:
#          dev_id: 'ioniq'
#          gps: ['{{ states.device_tracker.ioniq.attributes.latitude }}','{{ states.device_tracker.ioniq.attributes.longitude }}']
