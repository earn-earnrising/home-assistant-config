homeassistant:
  customize:
    sensor.car_ioniq_location:
      friendly_name: 'Última actualización'
      #icon: 'mdi:clock'
      entity_picture: '/local/ioniq-icon.png'
    sensor.car_ioniq_charge_state:
      friendly_name: 'Estado carga'
      icon: 'mdi:flash-circle'
    sensor.car_al_colegio:
      friendly_name: 'Al colegio'
    sensor.car_a_la_oficina:
      friendly_name: 'A la oficina'
    sensor.car_ioniq_charger_current_power:
      friendly_name: 'Potencia carga'
      icon: 'mdi:speedometer'
    sensor.car_ioniq_charger_yearly_pico:
      friendly_name: 'Consumo anual (pico)'
      icon: 'mdi:trending-up'
    sensor.car_ioniq_charger_yearly_valle:
      friendly_name: 'Consumo anual (valle)'
      icon: 'mdi:trending-down'
      unit_of_measurement: kWh
    sensor.car_ioniq_charger_yearly_super_valle:
      friendly_name: 'Consumo anual (super valle)'
      icon: 'mdi:trending-down'
      unit_of_measurement: kWh
    sensor.car_ioniq_charger_monthly_pico:
      friendly_name: 'Consumo mensual (pico)'
      icon: 'mdi:trending-up'
    sensor.car_ioniq_charger_monthly_valle:
      friendly_name: 'Consumo mensual (valle)'
      icon: 'mdi:trending-down'
    sensor.car_ioniq_charger_monthly_super_valle:
      friendly_name: 'Consumo mensual (super valle)'
      icon: 'mdi:trending-down'
    sensor.car_ioniq_charger_daily_pico:
      friendly_name: 'Consumo diario (pico)'
      icon: 'mdi:trending-up'
    sensor.car_ioniq_charger_daily_valle:
      friendly_name: 'Consumo diario (valle)'
      icon: 'mdi:trending-down'
    sensor.car_ioniq_charger_daily_super_valle:
      friendly_name: 'Consumo diario (super valle)'
      icon: 'mdi:trending-down'
    binary_sensor.car_ioniq_state:
      friendly_name: 'Estado'
    camera.car_ioniq:
      friendly_name: 'Ioniq'
    switch.car_ioniq_charger:
      friendly_name: 'Cargador'
      icon: 'mdi:ev-station'
    device_tracker.car_ioniq:
      entity_picture: /local/ioniq-icon.png

recorder:
  exclude:
    entities:
      - sensor.car_ioniq_location_previous_latitude
      - sensor.car_ioniq_location_previous_longitude
      - sensor.car_ioniq_location_last_update

device_tracker:
  - platform: mqtt_json
    devices:
      # Ioniq tracker
      car_ioniq: car/ioniq/location
      # Nissan tracker
      #nissan: car/nissan/location

binary_sensor:
  - platform: mqtt
    state_topic: 'car/ioniq/state'
    name: car_ioniq_state
    value_template: 'ON'
    json_attributes_topic: 'car/ioniq/state'
    device_class: 'moving'
    force_update: true
    off_delay: 180

sensor:
  - platform: mqtt
    state_topic: 'car/ioniq/location'
    name: car_ioniq_location
    value_template: '{{ value_json.last_update|timestamp_custom("%d/%m/%Y %H:%M:%S") }}'
    json_attributes_topic: 'car/ioniq/location'

  - platform: mqtt
    state_topic: 'car/ioniq/state/daily'
    name: car_ioniq_state_daily
    value_template: '{{ value_json.timestamp|timestamp_custom("%d/%m/%Y %H:%M:%S") }}'
    json_attributes_topic: 'car/ioniq/state/daily'

  - platform: template
    sensors:
      # Charger today energy charged
      car_ioniq_state_today_energy_charged:
        value_template: >- 
          {% if state_attr('switch.car_ioniq_charger', 'today_energy_kwh') is not none %}
            state_attr('switch.car_ioniq_charger', 'today_energy_kwh')
          {% else %}
            0
          {% endif %}
        unit_of_measurement: kWh
      # Current power used by Ioniq charger
      car_ioniq_charger_current_power:
        value_template: "{{state_attr('switch.car_ioniq_charger','current_power_w')|int}}"
        unit_of_measurement: W
      # Ioniq State Of Charge display
      car_ioniq_state_soc_display:
        friendly_name: 'Batería mostrada'
        device_class: 'battery'
        value_template: '{{state_attr("binary_sensor.car_ioniq_state", "soc_display")}}'
        unit_of_measurement: '%'
      # Ioniq State Of Health
      car_ioniq_state_battery_health:
        friendly_name: 'Salud batería'
        device_class: 'battery'
        value_template: '{{state_attr("binary_sensor.car_ioniq_state", "soh")}}'
        unit_of_measurement: '%'
      # Ioniq State Of Charge BMS
      car_ioniq_state_soc_bms:
        friendly_name: 'Batería BMS'
        device_class: 'battery'
        value_template: '{{state_attr("binary_sensor.car_ioniq_state", "soc_bms")}}'
        unit_of_measurement: '%'
      # Ioniq odometer
      car_ioniq_state_odometer:
        friendly_name: 'Odómetro'
        icon_template: 'mdi:counter'
        value_template: '{{state_attr("binary_sensor.car_ioniq_state", "odometer")}}'
        unit_of_measurement: 'Km'
      # Ioniq distance traveled since codes cleared
      car_ioniq_state_distance_since_cc:
        friendly_name: 'Distancia cc'
        icon_template: 'mdi:counter'
        value_template: '{{state_attr("binary_sensor.car_ioniq_state", "distance_since_cc")}}'
        unit_of_measurement: 'Km'
      # Ioniq Cumulative Energy Discharged
      car_ioniq_state_ced:
        value_template: '{{state_attr("binary_sensor.car_ioniq_state", "ced")}}'
        unit_of_measurement: 'kWh'
      # Ioniq Cumulative Energy Charged
      car_ioniq_state_cec:
        value_template: '{{state_attr("binary_sensor.car_ioniq_state", "cec")}}'
        unit_of_measurement: 'kWh'
######################### Daily state data #########################
      # Ioniq daily State Of Charge display
      car_ioniq_state_daily_soc_display:
        value_template: '{{state_attr("sensor.car_ioniq_state_daily", "soc_display")}}'
        unit_of_measurement: '%'
      # Ioniq daily State Of Health
      car_ioniq_state_daily_battery_health:
        value_template: '{{state_attr("sensor.car_ioniq_state_daily", "soh")}}'
        unit_of_measurement: '%'
      # Ioniq daily State Of Charge BMS
      car_ioniq_state_daily_soc_bms:
        value_template: '{{state_attr("sensor.car_ioniq_state_daily", "soc_bms")}}'
        unit_of_measurement: '%'
      # Ioniq daily odometer
      car_ioniq_state_daily_odometer:
        value_template: '{{state_attr("sensor.car_ioniq_state_daily", "odometer")}}'
        unit_of_measurement: 'Km'
      # Ioniq daily distance traveled since codes cleared
      car_ioniq_state_daily_distance_since_cc:
        value_template: '{{state_attr("sensor.car_ioniq_state_daily", "distance_since_cc")}}'
        unit_of_measurement: 'Km'
      # Ioniq daily Cumulative Energy Discharged
      car_ioniq_state_daily_ced:
        value_template: '{{state_attr("sensor.car_ioniq_state_daily", "ced")}}'
        unit_of_measurement: 'kWh'
      # Ioniq daily Cumulative Energy Charged
      car_ioniq_state_daily_cec:
        value_template: '{{state_attr("sensor.car_ioniq_state_daily", "cec")}}'
        unit_of_measurement: 'kWh'
      # Ioniq daily energy charged
      car_ioniq_state_daily_energy_charged:
        value_template: '{{states("sensor.car_ioniq_state_today_energy_charged")}}'
        unit_of_measurement: 'kWh'
######################### Daily state data #########################
      # Ioniq Average energy consumption without taking into account regeneration
      car_ioniq_state_energy_consumption:
        friendly_name: 'Consumo medio'
        icon_template: 'mdi:car-electric'
        value_template: '{{ ((states.sensor.car_ioniq_state_ced.state | float / states.sensor.car_ioniq_state_odometer.state | float) * 100) | round(1)}}'
        unit_of_measurement: 'kWh/100Km'
        entity_id:
          - sensor.car_ioniq_state_ced
          - sensor.car_ioniq_state_odometer
      # Ioniq Previous latitude
      car_ioniq_location_previous_latitude:
        value_template: '{{state_attr("sensor.car_ioniq_location", "platitude")}}'
        entity_id: 
          - sensor.car_ioniq_location
      # Ioniq Previous longitude
      car_ioniq_location_previous_longitude:
        value_template: '{{state_attr("sensor.car_ioniq_location", "plongitude")}}'
        entity_id: 
          - sensor.car_ioniq_location
      # Ioniq Distance travelled between updates
      car_ioniq_location_distance_travelled_between_updates:
        unit_of_measurement: 'm'
        friendly_name: 'Dist. entre actualizaciones'
        value_template: '{% if states.device_tracker.car_ioniq.attributes.latitude %} {{ (distance(states("sensor.car_ioniq_location_previous_latitude"), states("sensor.car_ioniq_location_previous_longitude"), states.device_tracker.car_ioniq.attributes.latitude, states.device_tracker.car_ioniq.attributes.longitude) * 1000) | round (2) }} {% else %} -1 {% endif %}'
        icon_template: 'mdi:tape-measure'
        entity_id: 
          - device_tracker.car_ioniq
          - sensor.car_ioniq_location_previous_latitude
          - sensor.car_ioniq_location_previous_longitude
      # Ioniq GPS accuracy
      car_ioniq_location_gps_accuracy:
        unit_of_measurement: 'm'
        friendly_name: 'Precisión GPS'
        value_template: '{{state_attr("device_tracker.car_ioniq", "gps_accuracy")}}'
        icon_template: 'mdi:map-marker-radius'
        entity_id: 
          - device_tracker.car_ioniq
      car_ioniq_charge_state:
        value_template: >-
          {%- if states('sensor.car_ioniq_charger_current_power')|float > 1000.0 or is_state_attr('binary_sensor.car_ioniq_state', 'charging', 1) %}
             Cargando
          {%- elif is_state('switch.car_ioniq_charger', 'off') %}
            Apagado
          {% else %}
            Listo
          {%- endif %}
        entity_id: 
          - switch.car_ioniq_charger
          - binary_sensor.car_ioniq_charger_current_power
          - binary_sensor.car_ioniq_state

  # Google travel time to work
  - platform: google_travel_time
    name: 'car_a_la_oficina'
    api_key: !secret google_api_key
    origin: device_tracker.car_ioniq
    destination: zone.oficina
    options:
      language: es
      departure_time: now
      traffic_model: pessimistic
  
  # Google travel time to school
  - platform: google_travel_time
    name: 'car_al_colegio'
    api_key: !secret google_api_key
    origin: device_tracker.car_ioniq
    destination: zone.colegio
    options:
      language: es
      departure_time: now
      traffic_model: pessimistic

utility_meter:
  car_ioniq_charger_daily:
    source: sensor.car_ioniq_charger
    cycle: daily
    tariffs:
      - Pico
      - Valle
      - Super valle
  car_ioniq_charger_monthly:
    source: sensor.car_ioniq_charger
    cycle: monthly
    tariffs:
      - Pico
      - Valle
      - Super valle
  car_ioniq_charger_yearly:
    source: sensor.car_ioniq_charger
    cycle: yearly
    tariffs:
      - Pico
      - Valle
      - Super valle

camera:
  - platform: generic
    name: car_ioniq
    still_image_url: !secret camera_ioniq_still_image_url
    limit_refetch_to_url_change: true

automation:
  - alias: '[Car] Set correct energy tariff on start'
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: utility_meter.select_tariff
        data_template:
          entity_id: utility_meter.car_ioniq_charger_daily
          tariff: >-
            {%- if as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) >= as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=1).replace(minute=0).replace(second=0)) and as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) < as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=7).replace(minute=0).replace(second=0)) %}
              Super valle
            {%- elif as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) >= as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=13).replace(minute=0).replace(second=0)) and as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) < as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=23).replace(minute=0).replace(second=0))%}
              Pico
            {%- else %}
              Valle
            {%- endif %}
      - service: utility_meter.select_tariff
        data_template:
          entity_id: utility_meter.car_ioniq_charger_monthly
          tariff: >-
            {%- if as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) >= as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=1).replace(minute=0).replace(second=0)) and as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) < as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=7).replace(minute=0).replace(second=0)) %}
              Super valle
            {%- elif as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) >= as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=13).replace(minute=0).replace(second=0)) and as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) < as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=23).replace(minute=0).replace(second=0))%}
              Pico
            {%- else %}
              Valle
            {%- endif %}
      - service: utility_meter.select_tariff
        data_template:
          entity_id: utility_meter.car_ioniq_charger_yearly
          tariff: >-
            {%- if as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) >= as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=1).replace(minute=0).replace(second=0)) and as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) < as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=7).replace(minute=0).replace(second=0)) %}
              Super valle
            {%- elif as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) >= as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=13).replace(minute=0).replace(second=0)) and as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) < as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=23).replace(minute=0).replace(second=0))%}
              Pico
            {%- else %}
              Valle
            {%- endif %}

  - alias: '[Car] Energy Pico time'
    trigger:
      platform: time
      at: '13:00:00'
    action:
      - service: utility_meter.select_tariff
        data:
          entity_id: utility_meter.car_ioniq_charger_daily
          tariff: 'Pico'
      - service: utility_meter.select_tariff
        data:
          entity_id: utility_meter.car_ioniq_charger_monthly
          tariff: 'Pico'
      - service: utility_meter.select_tariff
        data:
          entity_id: utility_meter.car_ioniq_charger_yearly
          tariff: 'Pico'

  - alias: '[Car] Energy Valle time'
    trigger:
      - platform: time
        at: '23:00:00'
      - platform: time
        at: '07:00:00'
    action:
      - service: utility_meter.select_tariff
        data:
          entity_id: utility_meter.car_ioniq_charger_daily
          tariff: 'Valle'
      - service: utility_meter.select_tariff
        data:
          entity_id: utility_meter.car_ioniq_charger_monthly
          tariff: 'Valle'
      - service: utility_meter.select_tariff
        data:
          entity_id: utility_meter.car_ioniq_charger_yearly
          tariff: 'Valle'

  - alias: '[Car] Energy Super valle time'
    trigger:
      platform: time
      at: '01:00:00'
    action:
      - service: utility_meter.select_tariff
        data:
          entity_id: utility_meter.car_ioniq_charger_daily
          tariff: 'Super valle'
      - service: utility_meter.select_tariff
        data:
          entity_id: utility_meter.car_ioniq_charger_monthly
          tariff: 'Super valle'
      - service: utility_meter.select_tariff
        data:
          entity_id: utility_meter.car_ioniq_charger_yearly
          tariff: 'Super valle'

  - alias: '[Car] Turn off Ioniq car charger 5 mins after Super valle time finishes'
    trigger:
      platform: state
      entity_id: utility_meter.car_ioniq_charger_daily
      from: 'Super valle'
    action:
      - delay:
          minutes: 5
      - service: switch.turn_off
        entity_id: switch.car_ioniq_charger

  - alias: '[Car] Notify when Ioniq charge finishes'
    trigger:
      platform: state
      entity_id: sensor.car_ioniq_charge_state
      from: 'Cargando'
    action:
      - service: notify.telegram
        data_template:
          message: >-
            Carga del Ioniq finalizada. {{state_attr('switch.car_ioniq_charger', 'today_energy_kwh')}} kWh cargados.

  - alias: '[Car] Publish Ioniq daily state'
    trigger:
      platform: time
      at: '23:59:00'
    action:
      - service: mqtt.publish
        data:
          topic: 'car/ioniq/state/daily'
          retain: true
          qos: 0
          payload_template: "{{{\"charged_energy_kwh\":  states('sensor.car_ioniq_state_today_energy_charged'),\"odometer\": states('sensor.car_ioniq_state_odometer'),\"ced\": states('sensor.car_ioniq_state_ced'),\"cec\": states('sensor.car_ioniq_state_cec'),\"soh\": states('sensor.car_ioniq_state_battery_health'),\"soc_display\":states('sensor.car_ioniq_state_soc_display'),\"soc_bms\":states('sensor.car_ioniq_state_soc_bms'),\"distance_since_cc\": states('sensor.car_ioniq_state_distance_since_cc'),\"timestamp\": as_timestamp(now())|round,} | tojson}}"