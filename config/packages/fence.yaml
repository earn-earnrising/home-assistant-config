homeassistant:
  customize:
    sensor.outside_fence:
      friendly_name: 'Estado barrera'

recorder:
  exclude:
    entities:
      - sensor.outside_fence_sensor_state

sensor:
  - platform: template
    sensors:
      # Wemo Maker sensor state (off: fence opened, on: fence closed)
      outside_fence_sensor_state:
        value_template: '{{state_attr("switch.barrera", "sensor_state")}}'

  - platform: mqtt
    name: 'outside_fence'
    state_topic: 'home/sensor/fence/state'
    icon: mdi:garage

cover:
  - platform: template
    covers:
      outside_fence:
        friendly_name: "Barrera"
        value_template: "{{ is_state_attr('switch.barrera', 'sensor_state', 'off') }}"
        open_cover:
          service: switch.turn_on
          data:
            entity_id: switch.barrera
        close_cover:
          service: switch.turn_on
          data:
            entity_id: switch.barrera
        icon_template: >-
          {%- if is_state("sensor.outside_fence", "Abierta") %}
            mdi:garage-open
          {%- elif is_state("sensor.outside_fence", "En movimiento") %}
            mdi:garage-alert
          {% else %}
            mdi:garage
          {% endif %}

cloud:
  google_actions:
    entity_config:
      cover.outside_fence:
        name: Puerta de entrada
        aliases:
          - Barrera
          - Puerta de entrada
        room: Jardín delantero

automation:
    # Fence state. Can be moving (En movimiento), open (Abierta) or closed (Cerrada).
    # Fence needs around 18 seconds to fully open/close
  - alias: '[Fence] Publish to mqtt fence status'
    trigger:
      platform: state
      entity_id: switch.barrera
      to: 'off'
    action:
      - service: mqtt.publish
        data:
          topic: home/sensor/fence/state
          payload_template: >-
            {%- if is_state("sensor.outside_fence_sensor_state", "off") %}
              En movimiento
            {%- else %}
              Cerrada
            {%- endif %}
          qos: 0
          retain: true
      - delay:
          seconds: 18
      - service: mqtt.publish
        data:
          topic: home/sensor/fence/state
          payload_template: >-
            {%- if is_state("sensor.outside_fence_sensor_state", "off") %}
              Abierta
            {% else %}
              Cerrada
            {%- endif %}
          qos: 0
          retain: true

  - alias: '[Fence] Publish to mqtt fence moving (En movimiento) status'
    trigger:
      platform: state
      entity_id: switch.barrera
      to: 'on'
    action:
      - service: mqtt.publish
        data:
          topic: home/sensor/fence/state
          payload: "En movimiento"
          qos: 0
          retain: true

  - alias: '[Fence] Publish to mqtt fence closed (Cerrada) status'
    trigger:
      platform: state
      entity_id: sensor.outside_fence_sensor_state
      to: 'on'
    action:
      - service: mqtt.publish
        data:
          topic: home/sensor/fence/state
          payload: Cerrada
          qos: 0
          retain: true

  - alias: '[Fence] When fence open notify every 10 minutes'
    trigger:
      platform: time_pattern
      minutes: '/1'
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: sensor.outside_fence
          state: 'Abierta'
        - condition: template
          value_template: '{{ ((as_timestamp(now()) - as_timestamp(states.sensor.outside_fence.last_changed))//60)%10 == 0 }}'
        - condition: template
          value_template: '{{ ((as_timestamp(now()) - as_timestamp(states.sensor.outside_fence.last_changed))//60) != 0 }}'
    action:
      - service: tts.google_translate_say
        entity_id: media_player.recibidor
        data_template:
          message: 'Barrera {{ states.sensor.outside_fence.state }} durante más de {{ (as_timestamp(now()) - as_timestamp(states.sensor.outside_fence.last_changed))|int//60 }} minutos'
          cache: false
      - service: telegram_bot.send_message
        data_template:
          message: 'Barrera {{ states.sensor.outside_fence.state }} durante más de {{ (as_timestamp(now()) - as_timestamp(states.sensor.outside_fence.last_changed))|int//60 }} minutos'
          target: 
            - !secret hokusphone_telegram_chat_id
            - !secret geniphone_telegram_chat_id
          inline_keyboard: 
            - 'Cerrar:/switch.turn_on#switch.barrera'
      - service: notify.slack
        data_template:
          message: ''
          data:
            attachments:
              - color: 'warning'
                pretext: ':door: *Barrera abierta* :door:'
                text: 'Barrera {{ states.sensor.outside_fence.state }} durante más de {{ (as_timestamp(now()) - as_timestamp(states.sensor.outside_fence.last_changed))|int//60 }} minutos.'
                fallback: 'Barrera abierta'