homeassistant:
  customize:
    sensor.next_holiday_mode_start:
      icon: mdi:airplane-takeoff
    sensor.next_holiday_mode_end:
      icon: mdi:airplane-landing
    sensor.next_shift_event:
      icon: mdi:message
    sensor.next_shift_date:
      icon: mdi:calendar
    switch.holiday:
      friendly_name: 'Vacaciones'
      icon: mdi:airplane
    input_number.empty_home_activation_delay_minutes:
      icon: mdi:clock-end
    device_tracker.geniphone_wifi:
      source_type: router
    device_tracker.hokusphone_wifi:
      source_type: router
    device_tracker.guest:
      source_type: router
    person.jordi:
      entity_picture: 'https://s.gravatar.com/avatar/f5d192b4f4ffab4d9625f9b9e11d16b7?s=192'
    person.geni:
      entity_picture: '/local/person.geni.jpg'
    person.guest:
      entity_picture: '/local/person.guest.png'

recorder:
  exclude:
    entities:
      - sensor.next_shift_event
      - sensor.next_shift_date
      - sensor.next_holiday_mode_start
      - sensor.next_holiday_mode_end
      - sensor.check_switch_holiday

      - input_number.guest_mode_minutes

group:
  Unidad Familiar:
    entities:
      - person.jordi
      - person.geni
      - person.guest

input_boolean:
  guest_mode:
    name: Modo invitado
  #  initial: off
    icon: 'mdi:clock'

input_number:
  # Number of minutes to keep the guest mode on
  guest_mode_minutes:
    name: Minutos invitado
    initial: 180
    min: 0
    max: 240
    step: 5

device_tracker:
  - platform: mqtt
    devices:
      # Updated when hokusphone is connected to a WiFi
      hokusphone_wifi: phone/sensor/hokus/wifi
      # Updated when geniphone is connected to a WiFi
      geniphone_wifi: phone/sensor/geni/wifi

sensor:
  - platform: template
    sensors:
      next_holiday_mode_start:
        friendly_name: 'Inicio vacaciones'
        value_template: >-
             {%- if states.calendar.holiday_mode.attributes.start_time is not none %}
                 {{ as_timestamp(states.calendar.holiday_mode.attributes.start_time)|timestamp_custom("%d/%m/%Y %H:%M:%S") }}
             {% else %}
                 No previstas
             {%- endif %}
      next_holiday_mode_end:
        friendly_name: 'Fin vacaciones'
        value_template: >-
             {%- if states.calendar.holiday_mode.attributes.end_time is not none %}
                 {{ as_timestamp(states.calendar.holiday_mode.attributes.end_time)|timestamp_custom("%d/%m/%Y %H:%M:%S") }}
             {% else %}
                 No previstas
             {%- endif %}
      next_shift_event:
        friendly_name: 'Próx. turno'
        value_template: '{{ states.calendar.turnos_geni_everything.attributes.message }}'
      next_shift_date:
        friendly_name: 'Próx. turno'
        value_template: >-
            {%- if as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 0 %}
                Domingo, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
            {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 1 %}
                Lunes, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
            {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 2 %}
                Martes, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
            {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 3 %}
                Miércoles, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
            {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 4 %}
                Jueves, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
            {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 5 %}
                Viernes, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
            {% elif as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%w")|int == 6 %}
                Sábado, {{ as_timestamp(states.calendar.turnos_geni_everything.attributes.start_time)|timestamp_custom("%d/%m/%Y") }}
            {%- endif %}

switch:
  - platform: mqtt
    name: 'holiday'
    state_topic: 'home/switch/holiday/status'
    command_topic: 'home/switch/holiday/status'
    payload_on: 'ON'
    payload_off: 'OFF'
    optimistic: false
    qos: 0
    retain: true

cloud:
  google_actions:
    entity_config:
      script.presence_guest_mode_on:
        name: Persona autorizada
        aliases:
          - Persona autorizada
          - Modo invitado
        room: General
      script.presence_leave_home:
        name: Me voy
        aliases:
          - Me voy
        room: General
#      script.presence_jordi_at_home:
#        name: Ya estoy en casa
#        aliases:
#          - Ya estoy en casa
#        room: General

#google_assistant:
#  entity_config:
#    script.presence_set_virtual_device_home:
#      name: Persona autorizada
#      expose: true
#      aliases:
#        - Persona autorizada
#        - Modo invitado
#      room: General
#    script.presence_leave_home:
#      name: Me voy
#      expose: true
#      room: General
#    script.presence_jordi_at_home:
#      name: Ya estoy en casa
#      expose: true
#      room: General

#automation:
  # Empty home automation when no one of the Familia group is at home
#  - alias: '[Presence] Empty home'
#    trigger:
#      platform: state
#      entity_id: group.unidad_familiar
#      to: 'not_home'
#    action:
#      - service: script.turn_on
#        data:
#          entity_id: script.presence_empty_home
  
  # Someone home automation when someone of the Familia group is at home
#  - alias: '[Presence] Someone home'
#    trigger:
#      platform: state
#      entity_id: group.unidad_familiar
#      to: 'home'
#    action:
#      - service: script.turn_on
#        data:
#          entity_id: script.presence_someone_home
  
  # Turn on hall lamp when someone at home and the sun is set
#  - alias: '[Presence] Turn on hall lamp when someone arrives at home and the sun is set'
#    trigger:
#      platform: state
#      entity_id: group.unidad_familiar
#      to: 'home'
#    condition:
#      condition: sun
#      after: sunset
#    action:
#      - service: switch.turn_on
#        data:
#          entity_id: switch.entrance_hall_lamp_switch
  
#  - alias: '[Presence] Remind Geni to disable alarm clock when she works at night'
#    trigger:
#      platform: time
#      at: '20:45:00'
#    condition:
#      condition: state
#      entity_id: 'calendar.turnos_geni_noche'
#      state: 'on'
#    action:
#      - service: notify.telegram
#        data:
#          target: !secret geniphone_telegram_chat_id
#          message: '¿Has desconectado ya el despertador? Si no lo has hecho, es hora de hacerlo.'

  #############################################################
  # Presence automations - Geni
  #############################################################
  
  # When some related entities (device_tracker.geniphone, device_tracker.geniphone_wifi) changes its state:
  # Set Geni to 'home' when at least ONE of related entities are set to 'home'
  # Else set Geni to 'not_home' when ALL related entities are in a state different from 'home'
  # Set Geni to the WiFi name otherwise
#  - alias: '[Presence] Geni location'
#    trigger:
#      - platform: state
#        entity_id: device_tracker.geniphone, device_tracker.geniphone_wifi
#      - platform: homeassistant
#        event: start
#    action:
#      - service: device_tracker.see
#        data_template:
#          dev_id: 'geni_combined'
#          location_name: >
#            {%- if is_state('device_tracker.geniphone', 'home') or is_state('device_tracker.geniphone_wifi', 'home') -%}
#              home
#            {%- else -%}
#              {%- if is_state('device_tracker.geniphone', 'not_home') and is_state('device_tracker.geniphone_wifi', 'not_connected') -%}
#                not_home
#              {%- else -%}
#                {{ states.device_tracker.geniphone_wifi.state }}
#              {%- endif -%}
#            {%- endif -%}

#  - alias: '[Presence] Geni at home'
#    trigger:
#      - platform: state
#        entity_id: person.geni
#        to: 'home'
#    action:
#      - service: notify.slack
#        data_template:
#          message: ''
#          data:
#            attachments:
#              - color: 'good'
#                pretext: ':woman: *Presencia* :woman:'
#                text: 'Geni está en casa'
#                fallback: 'Presencia'

#  - alias: '[Presence] Geni not home'
#    trigger:
#      - platform: state
#        entity_id: person.geni
#        from: 'home'
#    action:
#      - service: notify.slack
#        data_template:
#          message: ''
#          data:
#            attachments:
#              - color: 'good'
#                pretext: ':woman: *Presencia* :woman:'
#                text: 'Geni está fuera de casa'
#                fallback: 'Presencia'

  #############################################################
  # Presence automations - Jordi
  #############################################################
  
  # When some related entities (device_tracker.hokusphone, device_tracker.hokusphone_wifi) changes its state:
  # Set Jordi to 'home' when at least ONE of related entities are set to 'home'
  # Else set Jordi to 'not_home' when ALL related entities are in a state different from 'home'
  # Set Jordi to the WiFi name otherwise
#  - alias: '[Presence] Jordi location'
#    trigger:
#      - platform: state
#        entity_id: device_tracker.hokusphone, device_tracker.hokusphone_wifi
#      - platform: homeassistant
#        event: start
#    action:
#      - service: device_tracker.see
#        data_template:
#          dev_id: 'jordi_combined'
#          location_name: >
#            {%- if is_state('device_tracker.hokusphone', 'home') or is_state('device_tracker.hokusphone_wifi', 'home') -%}
#              home
#            {%- else -%}
#              {%- if is_state('device_tracker.hokusphone', 'not_home') and is_state('device_tracker.hokusphone_wifi', 'not_connected') -%}
#                not_home
#              {%- else -%}
#                {{ states.device_tracker.hokusphone_wifi.state }}
#              {%- endif -%}
#            {%- endif -%}

#  - alias: '[Presence - Jordi] Jordi arriving home in Ioniq'
#    trigger:
#       - platform: zone
#         entity_id: device_tracker.car_ioniq
#         zone: zone.home
#         event: enter
#    condition:
#      condition: and
#      conditions:
#        - condition: state
#          entity_id: sensor.outside_fence_sensor_state
#          state: 'on'
#        - condition: state
#          entity_id: binary_sensor.car_ioniq_state
#          state: 'on'
#    action:
#      - service: switch.turn_on
#        entity_id: switch.barrera
#      - service: mqtt.publish
#        data:
#          payload_template: >
#            He abierto la barrera. {%- if is_state("person.geni", "home") -%}Jeni está en casa.{%- else -%}Jeni no está en casa.{%- endif -%}
#          retain: false
#          topic: 'phone/sensor/hokus/cmnd/say'
#      - delay:
#          seconds: 5
#      - service: telegram_bot.send_message
#        data_template:
#          message: 'Barrera abierta automáticamente'
#          target: !secret hokusphone_telegram_chat_id
#          inline_keyboard: 
#            - 'Cerrar:/switch.turn_on#switch.barrera'
# #     - service: device_tracker.see
# #       data:
# #         dev_id: 'jordi_combined'
# #         location_name: 'home'
#  
#  - alias: '[Presence - Jordi] Jordi leaving home in Ioniq'
#    trigger:
#       - platform: zone
#         entity_id: device_tracker.car_ioniq
#         zone: zone.home
#         event: leave
#    condition:
#      - condition: state
#        entity_id: binary_sensor.car_ioniq_state
#        state: 'on'
#    action:
#      - service: mqtt.publish
#        data:
#          payload_template: >
#            {%- if is_state("group.unidad_familiar", "not_home") -%}{%- if is_state("sensor.outside_fence", "Abierta") -%}Te has dejado la barrera abierta, la voy a cerrar. {%- endif -%}{%- if is_state("sensor.cocina_sensor_puerta", "Abierta") %}Puerta de la cocina abierta. {% endif -%}{%- if is_state("sensor.cocina_sensor_persiana", "Abierta") %}Persiana de la cocina abierta. {% endif -%}{%- endif -%}La previsión del tiempo es de {{ states.sensor.dark_sky_summary_0d.state | replace(" C."," grados") }}
#          retain: false
#          topic: 'cmnd/sensor/phone/hokus/say'
#      - service_template: >
#          {%- if is_state("group.unidad_familiar", "not_home") -%}
#            {%- if is_state("sensor.outside_fence_sensor_state", "off") -%}
#              homeassistant.turn_on
#            {%- else -%}
#              homeassistant.update_entity
#            {%- endif -%}
#          {%- endif -%}
#
#        data:
#          entity_id: switch.barrera
#
#  #############################################################
#  # Presence automations - Authorized person
#  #############################################################
#  # When input_boolean.empty_home_activation_delay turns on,
#  # Change virtual_device location to home
#  # Wait the specified amount of minutes 
#  # Turn off input_boolean.empty_home_activation_delay
##  - alias: '[Presence] empty_home_activation_delay on'
##    trigger:
##      platform: state
##      entity_id: input_boolean.empty_home_activation_delay
##      to: 'on'
##    action:
##      - service: device_tracker.see
##        data:
##          dev_id: 'virtual_device'
##          location_name: 'home'
##      - delay: 00:00:10
##      - service: homeassistant.turn_on
##        data:
##          entity_id: group.seguridad
##      - service: notify.telegram
##        data_template:
##          message: >
##            Activada persona autorizada durante {{ (states.input_number.empty_home_activation_delay_minutes.state | int) // 60 }} hora(s) y {{ (states.input_number.empty_home_activation_delay_minutes.state | int) % 60 }} minutos
##      - delay: '{{ (states.input_number.empty_home_activation_delay_minutes.state | int) // 60 }}:{{ (states.input_number.empty_home_activation_delay_minutes.state | int) % 60 }}'
##      - service: homeassistant.turn_off
##        data:
##          entity_id: input_boolean.empty_home_activation_delay
#  
#  # When input_boolean.empty_home_activation_delay turns off,
#  # Change virtual_device location to not_home
##  - alias: '[Presence] empty_home_activation_delay off'
##    trigger:
##      platform: state
##      entity_id: input_boolean.empty_home_activation_delay
##      to: 'off'
##    action:
##      - service: homeassistant.turn_off
##        data:
##          entity_id: group.seguridad
##      - delay: 00:00:10
##      - service: device_tracker.see
##        data:
##          dev_id: 'virtual_device'
##          location_name: 'not_home'
#  
#  # Turn on for 4 hours authorized person at 8:15 if it's a workday
##  - alias: '[Presence] Authorized person'
##    trigger:
##      platform: time
##      at: '08:15:00'
##    condition:
##      condition: state
##      entity_id: 'binary_sensor.workday_sensor'
##      state: 'on'
##    action:
##      - service: input_number.set_value
##        data:
##          entity_id: input_number.empty_home_activation_delay_minutes
##          value: 240.0
##      - service: homeassistant.turn_on
##        data:
##          entity_id: input_boolean.empty_home_activation_delay
#
##  - alias: '[Presence] Authorized person at home'
##    trigger:
##      - platform: state
##        entity_id: device_tracker.virtual_device
##        to: 'home'
##    action:
##      - service: notify.slack
##        data_template:
##          message: ''
##          data:
##            attachments:
##              - color: 'good'
##                pretext: ':bust_in_silhouette: *Presencia* :bust_in_silhouette:'
##                text: 'Persona autorizada en casa'
##                fallback: 'Presencia'
##
##  - alias: '[Presence] Authorized person not home'
##    trigger:
##      - platform: state
##        entity_id: device_tracker.virtual_device
##        from: 'home'
##    action:
##      - service: notify.slack
##        data_template:
##          message: ''
##          data:
##            attachments:
##              - color: 'good'
##                pretext: ':bust_in_silhouette: *Presencia* :bust_in_silhouette:'
##                text: 'Persona autorizada fuera de casa'
##                fallback: 'Presencia'
#
#  #############################################################
#  # Holiday automations
#  #############################################################
#  
#  - alias: '[Presence - Holiday] Enters on holiday mode based on google calendar event'
#    trigger:
#      platform: state
#      entity_id: calendar.holiday_mode
#      from: 'off'
#      to: 'on'
#    action:
#      - service: switch.turn_on
#        data:
#          entity_id: switch.holiday
#      - service: notify.slack
#        data_template:
#          message: ''
#          data:
#            attachments:
#              - color: 'good'
#                pretext: ':bust_in_silhouette: *Presencia* :bust_in_silhouette:'
#                text: 'Modo vacaciones activado'
#                fallback: 'Presencia'
#  
#  - alias: '[Presence - Holiday] Exits on holiday mode based on google calendar event'
#    trigger:
#      platform: state
#      entity_id: calendar.holiday_mode
#      from: 'on'
#      to: 'off'
#    action:
#      - service: switch.turn_off
#        data:
#          entity_id: switch.holiday
#      - service: notify.slack
#        data_template:
#          message: ''
#          data:
#            attachments:
#              - color: 'good'
#                pretext: ':bust_in_silhouette: *Presencia* :bust_in_silhouette:'
#                text: 'Modo vacaciones desactivado'
#                fallback: 'Presencia'
#  
#  - alias: '[Presence - Holiday] Enters holiday mode based on switch state'
#    trigger:
#      platform: state
#      entity_id: switch.holiday
#      from: 'off'
#      to: 'on'
#    condition:
#      condition: template
#      value_template: "{{not is_state('climate.netatmo_general', 'off')}}"
#    action:
#      # Turn off thermostat
#      - service: script.turn_on
#        entity_id: script.climate_power_off
#      - service: notify.telegram
#        data:
#          message: 'Modo vacaciones activado'
#      - service: notify.slack
#        data_template:
#          message: ''
#          data:
#            attachments:
#              - color: 'good'
#                pretext: ':bust_in_silhouette: *Presencia* :bust_in_silhouette:'
#                text: 'Modo vacaciones activado'
#                fallback: 'Presencia'
#
#  - alias: '[Presence - Holiday] Exits holiday mode based on switch state'
#    trigger:
#      platform: state
#      entity_id: switch.holiday
#      from: 'on'
#      to: 'off'
#    condition:
#      condition: template
#      value_template: "{{not is_state('climate.netatmo_general', 'off')}}"
#    action:
#      # Set thermostat away mode 
#      - service: climate.set_preset_mode
#        entity_id: climate.netatmo_general
#        data_template:
#          preset_mode: 'away'
#      - service: notify.telegram
#        data:
#          message: 'Modo vacaciones desactivado'
#      - service: notify.slack
#        data_template:
#          message: ''
#          data:
#            attachments:
#              - color: 'good'
#                pretext: ':bust_in_silhouette: *Presencia* :bust_in_silhouette:'
#                text: 'Modo vacaciones desactivado'
#                fallback: 'Presencia'
#
#  - alias: '[Presence - Notification] Notify for new devices'
#    trigger:
#      platform: event
#      event_type: device_tracker_new_device
#    action:
#      - service: notify.telegram
#        data_template:
#          message: >
#            Nuevo dispositivo detectado:
#            {{trigger.event.data.host_name}}
#            ({{trigger.event.data.entity_id}})
#          title: Nuevo dispositivo
#      - service: notify.slack
#        data_template:
#          message: ''
#          data:
#            attachments:
#              - color: 'warning'
#                text: ':iphone: *Nuevo dispositivo* :iphone:'
#                fields:
#                  - title: 'Nombre'
#                    value: '{{trigger.event.data.host_name}}'
#                    short: true
#                  - title: 'Entidad'
#                    value: '{{trigger.event.data.entity_id}}'
#                    short: true
#                fallback: 'Nuevo dispositivo'

script:
  presence_empty_home:
    alias: 'Empty home'
    sequence:
      # Alarm arm away
      - service: script.turn_on
        data:
          entity_id: script.alarm_arm_away
      # Turn off hall lamp
      - service: switch.turn_off
        data:
          entity_id: switch.entrance_hall_lamp_switch
      # Turn off stair lights
      - service: switch.turn_off
        data:
          entity_id: switch.escalera_switch
      # Turn off suite light
      - service: switch.turn_off
        data:
          entity_id: switch.suite_switch
      # Continue script only if heating is on and not in holiday mode
      - condition: template
        value_template: "{{not is_state('climate.netatmo_general', 'off')}}"
      - condition: state
        entity_id: switch.holiday
        state: 'off'
      # Set thermostat away mode 
      - service: climate.set_preset_mode
        entity_id: climate.netatmo_general
        data_template:
          preset_mode: 'away'

  presence_someone_home:
    alias: 'Someone at home'
    sequence:
      # Disarm alarm
      - service: alarm_control_panel.alarm_disarm
        entity_id: alarm_control_panel.home
      # Continue script only if heating is on and not in holiday mode
      - condition: template
        value_template: "{{not is_state('climate.netatmo_general', 'off')}}"
      - condition: state
        entity_id: switch.holiday
        state: 'off'
      # Set thermostat Schedule mode 
      - service: climate.set_preset_mode
        entity_id: climate.netatmo_general
        data_template:
          preset_mode: 'Schedule'

  presence_guest_mode_on:
    alias: 'Activate guest mode for 180 minutes'
    sequence:
      - service: input_number.set_value
        data:
          entity_id: input_number.guest_mode_minutes
          value: 180.0
      - service: homeassistant.turn_on
        data:
          entity_id: input_boolean.guest_mode_minutes
  
  presence_leave_home:
    alias: 'Leave home'
    sequence:
      - delay:
          seconds: 5
      - service: tts.google_translate_say
        entity_id: media_player.recibidor
        data_template:
          message: >
            {% set incidence = false %}
            {%- if is_state("binary_sensor.porche_sensor_puerta", "on") %}{% set incidence = true %}Puerta de la cocina abierta. {% endif %}
            {%- if is_state("binary_sensor.porche_sensor_persiana", "on") %}{% set incidence = true %}Persiana de la cocina abierta. {% endif %}
            {%- if is_state("binary_sensor.coladuria_sensor_puerta", "on") %}{% set incidence = true %}Puerta de la coladuria abierta. {% endif %}
            {%- if is_state("switch.entrance_hall_lamp_switch", "on") %}{% set incidence = true %}Lámpara del recibidor encendida. {% endif %}
            {%- if is_state("switch.escalera_switch", "on") %}{% set incidence = true %}Luz de la escalera encendida. {% endif %}
            {%- if is_state("switch.suite_switch", "on") %}{% set incidence = true %}Luz de la suite encendida. {% endif %}
            {%- if is_state("sensor.outside_fence", "Abierta") %}{% set incidence = true %}Barrera abierta.{% endif -%}
            {%- if not incidence %}Todo correcto.{% endif %}
  
  presence_guest_mode_ga:
    alias: 'Activates the guest mode the specified number of minutes'
    sequence:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.guest_mode_minutes
          value: '{{data.minutes}}'
      - service: homeassistant.turn_on
        data:
          entity_id: input_boolean.guest_mode
      - service: telegram_bot.send_message
        data_template:
          message: 'Google Assistant a autorizado presencia en casa durante {{data.minutes}} minutos'
          target: !secret hokusphone_telegram_chat_id
  
#  presence_jordi_at_home:
#    alias: 'Jordi at home'
#    sequence:
#      - service: device_tracker.see
#        data:
#          dev_id: 'jordi_combined'
#          location_name: 'home'

  presence_hokusphone_connected_home_wifi:
    alias: 'HokusPhone connected to home Wi-Fi'
    sequence:
      - service: mqtt.publish
        data:
          payload: 'home'
          retain: true
          topic: 'phone/sensor/hokus/wifi'

  presence_hokusphone_not_connected_home_wifi:
    alias: 'HokusPhone disconnected from home Wi-Fi'
    sequence:
      - service: mqtt.publish
        data:
          payload: 'not_home'
          retain: true
          topic: 'phone/sensor/hokus/wifi'

  presence_geniphone_connected_home_wifi:
    alias: 'GeniPhone connected to home Wi-Fi'
    sequence:
      - service: mqtt.publish
        data:
          payload: 'home'
          retain: true
          topic: 'phone/sensor/geni/wifi'

  presence_geniphone_not_connected_home_wifi:
    alias: 'GeniPhone disconnected from home Wi-Fi'
    sequence:
      - service: mqtt.publish
        data:
          payload: 'not_home'
          retain: true
          topic: 'phone/sensor/geni/wifi'

zone:
  - name: Oficina
    latitude: !secret office_latitude
    longitude: !secret office_longitude
    radius: 200
    icon: mdi:briefcase
  
  - name: Colegio
    latitude: !secret school_latitude
    longitude: !secret school_longitude
    radius: 175
    icon: mdi:school
  
  - name: Hospital
    latitude: !secret office2_latitude
    longitude: !secret office2_longitude
    radius: 250
    icon: mdi:hospital-building
