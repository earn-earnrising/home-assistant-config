restart_ha:
  alias: 'Reiniciar HA'
  sequence:
      - service: homeassistant.restart

reboot_pi:
  alias: 'Reiniciar Pi'
  sequence:
      - service: shell_command.reboot_pi

power_off_thermostat:
  alias: 'Power off thermostat'
  sequence:
    - service: climate.set_temperature
      entity_id: climate.termostato
      data:
        temperature: 11.5

power_on_thermostat:
  alias: 'Power on thermostat'
  sequence:
    - service: climate.set_away_mode
      entity_id: climate.termostato
      data:
        away_mode: false

presence_empty_home:
  alias: 'Empty home'
  sequence:
    # Alarm arm away
    - service: script.turn_on
      data:
        entity_id: script.alarm_arm_away
    # Turn off hall lamp
    - service: switch.turn_off
      data:
        entity_id: switch.swiid_swiidinter_lampara_recibidor_switch
    # Turn off stair lights
    - service: switch.turn_off
      data:
        entity_id: switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch
    # Turn off suite light
    - service: switch.turn_off
      data:
        entity_id: switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch_2
    # Continue script only if switch.termostato is on and not in holiday mode
    - condition: state
      entity_id: switch.termostato
      state: 'on'
    - condition: state
      entity_id: switch.holiday
      state: 'off'
   # Turn on thermostat away mode 
    - service: climate.set_away_mode
      entity_id: climate.termostato
      data:
        away_mode: true

presence_someone_home:
  alias: 'Someone at home'
  sequence:
    # Turn off presence detection
#    - service: homeassistant.turn_off
#      data:
#        entity_id: group.seguridad
    # Disarm alarm
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.casa
    # Continue script only if switch.termostato is on and not in holiday mode
    - condition: state
      entity_id: switch.termostato
      state: 'on'
    - condition: state
      entity_id: switch.holiday
      state: 'off'
   # Turn off thermostat away mode 
    - service: climate.set_away_mode
      entity_id: climate.termostato
      data:
        away_mode: false

presence_set_virtual_device_home:
  alias: 'Set virtual device at home for 180 minutes'
  sequence:
    - service: input_number.set_value
      data:
        entity_id: input_number.empty_home_activation_delay_minutes
        value: 180.0
    - service: homeassistant.turn_on
      data:
        entity_id: input_boolean.empty_home_activation_delay

presence_leave_home:
  alias: 'Leave home'
  sequence:
    - service: script.turn_on
      data:
        entity_id: script.set_tts_volume_level
    - service: tts.google_say
      entity_id: media_player.homeassistant
      data_template:
        message: >
          {% set incidence = false %}
          {%- if is_state("binary_sensor.porche_sensor_puerta", "on") %}{% set incidence = true %}Puerta de la cocina abierta. {% endif %}
          {%- if is_state("binary_sensor.porche_sensor_persiana", "on") %}{% set incidence = true %}Persiana de la cocina abierta. {% endif %}
          {%- if is_state("binary_sensor.coladuria_sensor_puerta", "on") %}{% set incidence = true %}Puerta de la coladuria abierta. {% endif %}
          {%- if is_state("switch.swiid_swiidinter_lampara_recibidor_switch", "on") %}{% set incidence = true %}Lámpara del recibidor encendida. {% endif %}
          {%- if is_state("switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch", "on") %}{% set incidence = true %}Luz de la escalera encendida. {% endif %}
          {%- if is_state("switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch_2", "on") %}{% set incidence = true %}Luz de la suite encendida. {% endif %}
          {%- if is_state("sensor.switch_barrera", "Abierta") %}{% set incidence = true %}Barrera abierta.{% endif -%}
          {%- if not incidence %}Todo correcto.{% endif %}

presence_authorized_person_ga:
  alias: 'Authorizes a person the specified number of minutes'
  sequence:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.empty_home_activation_delay_minutes
        value: '{{data.minutes}}'
    - service: homeassistant.turn_on
      data:
        entity_id: input_boolean.empty_home_activation_delay
    - service: telegram_bot.send_message
      data_template:
        message: 'Google Assistant a autorizado presencia en casa durante {{data.minutes}} minutos'
        target: !secret hokusphone_telegram_chat_id

presence_jordi_at_home:
  alias: 'Jordi at home'
  sequence:
    - service: device_tracker.see
      data:
        dev_id: 'jordi_combined'
        location_name: 'home'

set_tts_volume_level:
  alias: 'Lower the home-assistant tts volume level between 23 and 9'
  sequence:
    - condition: time
      after: '23:00'
      before: '9:00'
    - service: media_player.volume_set
      entity_id: media_player.homeassistant
      data:
        volume_level: 0.3
    - delay:
        minutes: 2
    - service: media_player.volume_set
      entity_id: media_player.homeassistant
      data:
        volume_level: 0.75

goto_sleep:
  alias: 'Go to sleep'
  sequence:
    # Only execute script between 21:00 and 6:00
    - condition: time
      after: '21:00'
      before: '6:00'
    # Turn on stairs lights
    - service: switch.turn_on
      data:
        entity_id: switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch
    # Close fence if open
    - service_template: >
        {%- if is_state("sensor.switch_barrera", "Abierta") -%}
          homeassistant.turn_on
        {%- endif -%}

      data:
        entity_id: switch.barrera
    # Turn off outside lights
    - service: light.turn_off
      data:
        entity_id: group.external_lights_group
    # Turn off hall lamp
    - service: switch.turn_off
      data:
        entity_id: switch.swiid_swiidinter_lampara_recibidor_switch
    # Alarm arm night
    - service: script.turn_on
      data:
        entity_id: script.alarm_arm_night
      # Set tts volume level
    - service: script.turn_on
      data:
        entity_id: script.set_tts_volume_level
      # Speech the found incidences and say good night.
    - service: tts.google_say
      entity_id: media_player.homeassistant
      data_template:
        message: >
          {%- if is_state("binary_sensor.porche_sensor_puerta", "on") %}Puerta de la cocina abierta. {% endif %}
          {%- if is_state("binary_sensor.porche_sensor_persiana", "on") %}Persiana de la cocina abierta. {% endif %}
          {%- if is_state("binary_sensor.coladuria_sensor_puerta", "on") %}Puerta de la coladuría abierta. {% endif %}
          {%- if is_state("sensor.switch_barrera", "Abierta") -%}Cerrando barrera.{% endif -%}
          Alarma armada en modo noche. Buenas noches
    # Wait until tts finishes
#    - delay: '00:00:{{ states.media_player.homeassistant.attributes.media_duration | int }}'
    # Wait 2 minutes before turning stair lights off
    - delay:
        minutes: 2
    # Turn stairs lights off
    - service: switch.turn_off
      data:
        entity_id: switch.fibaro_fgs223_double_relay_luz_escalera_y_suite_switch

parte_meteorologico:
  alias: 'Parte meteorológico'
  sequence:
    - service: script.turn_on
      data:
        entity_id: script.set_tts_volume_level
    - service: tts.google_say
      entity_id: media_player.homeassistant
      data_template:
        message: >
          La temperatura exterior es de {{ states("sensor.exterior_termometro_temperatura") | replace("."," con ") }} {{states.sensor["exterior_termometro_temperatura"].attributes.unit_of_measurement }} 
          y una humedad del {{ states("sensor.exterior_termometro_humedad") }} {{states.sensor["exterior_termometro_humedad"].attributes.unit_of_measurement }}.
          La temperatura máxima de hoy ha sido de {{ states("sensor.exterior_termometro_max_temp") | replace("."," con ") }} {{states.sensor["exterior_termometro_max_temp"].attributes.unit_of_measurement }}.
          La temperatura mínima de hoy ha sido de {{ states("sensor.exterior_termometro_min_temp") | replace("."," con ") }} {{states.sensor["exterior_termometro_min_temp"].attributes.unit_of_measurement }}.
          La presión atmosférica es de {{ states("sensor.salon_termometro_presion") | replace("."," con ") }} {{states.sensor["salon_termometro_presion"].attributes.unit_of_measurement }}.
          Las rachas de viento son de {{ states("sensor.exterior_anemometro_velocidad_viento") }} {{states.sensor["exterior_anemometro_velocidad_viento"].attributes.unit_of_measurement }}'
          {%- if states("sensor.exterior_pluviometro_lluvia") == "0" %} No está lloviendo.{% else %} Está lloviendo unos {{ states("sensor.exterior_pluviometro_lluvia") | replace("."," con ") }} {{states.sensor["exterior_pluviometro_lluvia"].attributes.unit_of_measurement }}.{% endif %}
          {%- if states("sensor.exterior_pluviometro_lluvia_1") == "0" %} No ha llovido durante la última hora.{% else %} La precipitación de la última hora ha sido de {{ states("sensor.exterior_pluviometro_lluvia_1") | replace("."," con ") }} {{states.sensor["exterior_pluviometro_lluvia_1"].attributes.unit_of_measurement }}.{% endif %}
          {%- if states("sensor.exterior_pluviometro_lluvia_24") == "0" %} No ha llovido durante las últimas 24 horas.{% else %} La precipitación de las últimas 24 horas ha sido de {{ states("sensor.exterior_pluviometro_lluvia_24") | replace("."," con ") }} {{states.sensor["exterior_pluviometro_lluvia_24"].attributes.unit_of_measurement }}.{% endif %}
        cache: false

parte_meteorologico_corto:
  alias: 'Parte meteorológico corto'
  sequence:
    - service: script.turn_on
      data:
        entity_id: script.set_tts_volume_level
    - service: tts.google_say
      entity_id: media_player.homeassistant
      data_template:
        message: >
          La temperatura exterior es de {{ states("sensor.exterior_termometro_temperatura") | replace("."," con ") }} {{states.sensor["exterior_termometro_temperatura"].attributes.unit_of_measurement }}.
          La temperatura máxima de hoy ha sido de {{ states("sensor.exterior_termometro_max_temp") | replace("."," con ") }} {{states.sensor["exterior_termometro_max_temp"].attributes.unit_of_measurement }}.
          La temperatura mínima de hoy ha sido de {{ states("sensor.exterior_termometro_min_temp") | replace("."," con ") }} {{states.sensor["exterior_termometro_min_temp"].attributes.unit_of_measurement }}.
        cache: false

alarm_arm_away:
  alias: 'Alarm arm away'
  sequence:
    # Turn on alarm related sensors
    - service: homeassistant.turn_on
      data:
        entity_id: group.seguridad
    # Arm alarm
    - service: alarm_control_panel.alarm_arm_away
      entity_id: alarm_control_panel.casa

alarm_arm_night:
  alias: 'Alarm arm night'
  sequence:
    # Turn on alarm related sensors
    - service: homeassistant.turn_on
      data:
        entity_id: group.seguridad
    # Alarm arm night
    - service: alarm_control_panel.alarm_arm_night
      entity_id: alarm_control_panel.casa

alarm_disarm_telegram:
  alias: 'Alarm disarm from telegram'
  sequence:
    # Alarm disarm
    - service: alarm_control_panel.alarm_disarm
      data:
        entity_id: alarm_control_panel.casa
    # Send message
    - service: telegram_bot.send_message
      data_template:
        message: 'Alarma desarmada manualmente desde Telegram'
        target: 
          - !secret hokusphone_telegram_chat_id
          - !secret geniphone_telegram_chat_id
        disable_notification: false
        inline_keyboard:
               - 'Armar alarma:/script.turn_on#script.alarm_arm_away'

alarm_disarm_telegram_temporary:
  alias: 'Temporary alarm disarm from telegram'
  sequence:
    # Alarm disarm
    - service: alarm_control_panel.alarm_disarm
      data:
        entity_id: alarm_control_panel.casa
    # Send message
    - service: telegram_bot.send_message
      data_template:
        message: 'Alarma desarmada durante {{data.minutes}} minutos desde Telegram'
        target: 
          - !secret hokusphone_telegram_chat_id
          - !secret geniphone_telegram_chat_id
        disable_notification: false
        inline_keyboard:
               - 'Armar alarma:/script.turn_on#script.alarm_arm_away'
    # Wait specified time before arming the alarm again
    - delay: "{{ data.minutes | multiply(60) | timestamp_custom('%H:%M:%S',False) }}"
    # Alarm arm away
    - service: script.turn_on
      data:
        entity_id: script.alarm_arm_away

alarm_notify_camera:
  alias: 'Notifies camera motion detection with photo/video attached'
  sequence:
    # Send the notification
    - service_template: >-
        {%- if "jpg" in data.file -%}
          telegram_bot.send_photo
        {%- elif "mp4" in data.file -%}
          telegram_bot.send_video
        {%- endif -%}

      data_template:
        file: '{{data.file}}'
        caption: 'Movimiento detectado en {{data.camera_name}}'
        target: 
          - !secret hokusphone_telegram_chat_id
          - !secret geniphone_telegram_chat_id
        disable_notification: false
        inline_keyboard:
          - 'Desactivar det. mov. {{data.camera_name}}:/homeassistant.turn_off#{{data.turn_off_entity_id}}'
          - 'Desarmar 30 mins:/30_mins, Desarmar 1 hora:/60_mins'
          - 'Desarmar 2 horas:/120_mins, Desarmar 3 horas:/180_mins'
          - 'Desarmar alarma:/script.turn_on#script.alarm_disarm_telegram'

alarm_notify_sensor:
  alias: 'Notifies alarm'
  sequence:
    # Send the notification
    - service: telegram_bot.send_message
      data_template:
        message: '{{data.message}}'
        target: 
          - !secret hokusphone_telegram_chat_id
          - !secret geniphone_telegram_chat_id
        disable_notification: false
        inline_keyboard:
          - 'Desactivar sensor:/homeassistant.turn_off#{{data.turn_off_entity_id}}'
          - 'Desarmar 30 mins:/30_mins, Desarmar 1 hora:/60_mins'
          - 'Desarmar 2 horas:/120_mins, Desarmar 3 horas:/180_mins'
          - 'Desarmar alarma:/script.turn_on#script.alarm_disarm_telegram'

close_fence:
  alias: 'Close fence if open'
  sequence:
    - service_template: >
        {%- if is_state("sensor.switch_barrera", "Abierta") -%}
          homeassistant.turn_on
        {%- endif -%}

      data:
        entity_id: switch.barrera

open_fence_ga:
  alias: 'Open fence if closed'
  sequence:
    - service_template: >
        {%- if is_state("sensor.switch_barrera", "Cerrada") -%}
          homeassistant.turn_on
        {%- endif -%}

      data:
        entity_id: switch.barrera
    - service: telegram_bot.send_message
      data_template:
        message: 'Google Assistant ha abierto la barrera'
        target: !secret hokusphone_telegram_chat_id
        inline_keyboard: 
          - 'Cerrar:/script.turn_on#script.close_fence'

comfort_mode_off:
  alias: 'Turn off comfort mode'
  sequence:
   # Turn on thermostat away mode 
    - service: climate.set_away_mode
      entity_id: climate.termostato
      data:
        away_mode: true
    - delay:
        seconds: 5
   # Turn off thermostat away mode 
    - service: climate.set_away_mode
      entity_id: climate.termostato
      data:
        away_mode: false
